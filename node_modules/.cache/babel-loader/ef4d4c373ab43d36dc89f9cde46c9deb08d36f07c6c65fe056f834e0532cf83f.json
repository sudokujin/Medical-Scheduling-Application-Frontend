{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Login from '../views/Login.vue';\nimport Logout from '../views/Logout.vue';\nimport Register from '../views/Register.vue';\nimport store from '../store/index';\nimport Calendar from '../components/Calendar.vue';\nimport AppointmentForm from '../components/AppointmentForm.vue';\nimport Patient from '../views/Patient.vue';\nimport DoctorAccount from '../components/DoctorAccount';\nimport UpdateDoctorForm from '../components/UpdateDoctorForm';\nimport RegisterDoctorForm from '../components/RegisterDoctorForm';\nimport ReviewView from '../views/ReviewView';\nimport CreateReview from \"@/components/CreateReview.vue\";\nimport UpdateAppointmentForm from \"@/components/UpdateAppointmentForm.vue\";\nVue.use(Router);\n\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/logout\",\n    name: \"logout\",\n    component: Logout,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/patientInfo\",\n    name: \"patientInfo\",\n    component: Patient,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/doctorInfo\",\n    name: \"doctorInfo\",\n    component: RegisterDoctorForm,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/calendar\",\n    name: \"calendar\",\n    component: Calendar,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/doctors/:id\",\n    name: \"doctor\",\n    component: AppointmentForm,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/appointments/:id\",\n    name: \"updateAppointment\",\n    component: UpdateAppointmentForm,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/reviews\",\n    name: \"reviews\",\n    component: ReviewView,\n    meta: {\n      requiresAuth: false,\n      reload: true\n    }\n  }, {\n    path: \"/doctorAccount\",\n    name: \"doctorAccount\",\n    component: DoctorAccount,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/updateDoctor/:id\",\n    name: \"UpdateDoctorForm\",\n    component: UpdateDoctorForm,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/reviews/createReview\",\n    name: \"createReview\",\n    component: CreateReview,\n    meta: {\n      requiresAuth: false\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  });\n\n  // If it does and they are not logged in, send the user to \"/login\"\n  if (requiresAuth && store.state.token === '') {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Home","Login","Logout","Register","store","Calendar","AppointmentForm","Patient","DoctorAccount","UpdateDoctorForm","RegisterDoctorForm","ReviewView","CreateReview","UpdateAppointmentForm","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","reload","beforeEach","to","from","next","matched","some","x","state","token"],"sources":["C:/Users/guild/workspace/nlr-12-java-purple-team-0/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Login from '../views/Login.vue'\nimport Logout from '../views/Logout.vue'\nimport Register from '../views/Register.vue'\nimport store from '../store/index'\nimport Calendar from '../components/Calendar.vue'\nimport AppointmentForm from '../components/AppointmentForm.vue'\nimport Patient from '../views/Patient.vue'\nimport DoctorAccount from '../components/DoctorAccount'\nimport UpdateDoctorForm from '../components/UpdateDoctorForm'\nimport RegisterDoctorForm from '../components/RegisterDoctorForm'\nimport ReviewView from '../views/ReviewView'\nimport CreateReview from \"@/components/CreateReview.vue\";\nimport UpdateAppointmentForm from \"@/components/UpdateAppointmentForm.vue\";\n\n\nVue.use(Router)\n\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/login\",\n      name: \"login\",\n      component: Login,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/logout\",\n      name: \"logout\",\n      component: Logout,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/register\",\n      name: \"register\",\n      component: Register,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/patientInfo\",\n      name: \"patientInfo\",\n      component: Patient,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/doctorInfo\",\n      name: \"doctorInfo\",\n      component: RegisterDoctorForm,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/calendar\",\n      name: \"calendar\",\n      component: Calendar,\n      meta: {\n        requiresAuth: true\n      }\n    },\n     {\n      path: \"/doctors/:id\",\n      name: \"doctor\",\n      component: AppointmentForm,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/appointments/:id\",\n      name: \"updateAppointment\",\n      component: UpdateAppointmentForm,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/reviews\",\n      name: \"reviews\",\n      component: ReviewView,\n      meta: {\n        requiresAuth: false,\n        reload: true\n      }\n    },\n      {\n      path: \"/doctorAccount\",\n      name: \"doctorAccount\",\n      component: DoctorAccount,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/updateDoctor/:id\",\n      name: \"UpdateDoctorForm\",\n      component: UpdateDoctorForm,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/reviews/createReview\",\n      name: \"createReview\",\n      component: CreateReview,\n      meta: {\n        requiresAuth: false\n      }\n    }\n  ]\n})\n\nrouter.beforeEach((to, from, next) => {\n  // Determine if the route requires Authentication\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\n\n  // If it does and they are not logged in, send the user to \"/login\"\n  if (requiresAuth && store.state.token === '') {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}