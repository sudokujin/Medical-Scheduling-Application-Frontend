{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport AppointmentService from \"../services/AppointmentService\";\nimport Navbar from \"../components/Navbar.vue\";\nimport DoctorTimeService from \"../services/DoctorTimeService\";\nexport default {\n  name: \"AppointmentForm\",\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      appointment: {\n        patientId: 0,\n        doctorId: null,\n        appointmentDuration: 30,\n        description: \"\",\n        appointmentDate: \"\",\n        appointmentTime: \"\"\n      },\n      timeslots: [],\n      valid: false,\n      selected: null,\n      dateSelected: null,\n      dateRules: [function (value) {\n        if (value) return true;\n        return \"Date is required.\";\n      },\n      // eslint-disable-next-line\n      /* eslint-disable */\n      function (value) {\n        if (/^\\d{4}[\\-\\/\\s]?((((0[13578])|(1[02]))[\\-\\/\\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\\-\\/\\s]?(([0-2][0-9])|(30)))|(02[\\-\\/\\s]?[0-2][0-9]))$/.test(value)) return true;\n        return \"Date must be in the format YYYY-MM-DD.\";\n      }],\n      timeRules: [function (value) {\n        if (value) return true;\n        return \"Time is required.\";\n      }, function (value) {\n        if (/(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])/.test(value)) return true;\n        return \"Time must be in the format 00:00:00.\";\n      }]\n    };\n  },\n  methods: {\n    clearInput: function clearInput() {\n      this.$refs.appointmentForm.reset();\n    },\n    createAppointment: function createAppointment() {\n      var _this = this;\n      this.appointment.patientId = this.$store.state.currentPatient.patientId;\n      AppointmentService.createAppointment(this.appointment).then(function (response) {\n        if (response.status === 201) {\n          _this.getTimeslots();\n        }\n      });\n      this.$router.push(\"/\");\n    },\n    getTimeSlotByIdAndDate: function getTimeSlotByIdAndDate(id, date) {\n      var _this2 = this;\n      AppointmentService.getTimeArray(id, date).then(function (response) {\n        _this2.timeSlots = response.data;\n      });\n      // service call here to pull data from doctor based on id this.selected and date selected this.dateSelected\n      // will i need to add a list of dates as well as a dropdown menu?\n    },\n    chosenDoctor: function chosenDoctor() {\n      var _this3 = this;\n      this.appointment.doctorId = this.doctorObj.doctorId;\n      console.log(\"id\", this.doctorObj.doctorId);\n      DoctorTimeService.getTimeArray(this.appointment.doctorId, this.appointment.appointmentDate).then(function (response) {\n        _this3.timeslots = response.data;\n      });\n    }\n  },\n  created: function created() {\n    this.appointment.patientId = this.$store.state.currentPatient.patientId;\n    // AppointmentService.getTimeArray(this.appointment.doctorId, this.appointment.appointmentDate).then(response => {\n    //   this.timeSlots = response.data;\n    // });\n  }\n};","map":{"version":3,"mappings":";;;AA6EA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IAAA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC,YACA;QACA;QAEA;MACA;MACA;MACA;MACA;QACA,IACA,qJACAC,MACA,EAEA;QAEA;MACA,EACA;MACAC,YACA;QACA;QAEA;MACA,GACA;QACA,uEACA;QAEA;MACA;IAEA;EAAA;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACA;MACAC,4DACA;QACA;UACA;QACA;MACA,EACA;MACA;IACA;IACAC;MAAA;MACAD;QACA;MACA;MACA;MACA;IACA;IACAE;MAAA;MACA;MACAC;MACAC,+BACA,2BACA,iCACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","components","Navbar","data","appointment","patientId","doctorId","appointmentDuration","description","appointmentDate","appointmentTime","timeslots","valid","selected","dateSelected","dateRules","value","timeRules","methods","clearInput","createAppointment","AppointmentService","getTimeSlotByIdAndDate","chosenDoctor","console","DoctorTimeService","created"],"sourceRoot":"src/components","sources":["CreateReview.vue"],"sourcesContent":["/* eslint-disable */\r\n<template>\r\n    <v-container fill-height fluid>\r\n        <navbar />\r\n        <v-col\r\n                justify=\"center\"\r\n                fill-height\r\n                class=\"d-flex justify-center\"\r\n        >\r\n            <div id=\"appointment\" class=\"text-center\">\r\n                <v-card>\r\n                    <v-form\r\n                            class=\"px-6 pb-5 pt-6\"\r\n                            ref=\"appointmentForm\"\r\n                            id=\"appointmentForm\"\r\n                            v-model=\"valid\"\r\n                            @submit.prevent=\"createAppointment\"\r\n                    >\r\n                        <v-img\r\n                                class=\"mx-auto\"\r\n                                src=\"../assets/caduceus-transparent-background-8.png\"\r\n                                max-width=\"50px\"\r\n                                max-height=\"100px\"\r\n                        >\r\n                        </v-img>\r\n                        <h1>Please Enter Appointment Information</h1>\r\n                        <v-text-field\r\n                                v-model=\"appointment.appointmentDate\"\r\n                                :counter=\"100\"\r\n                                label=\"Appointment Date\"\r\n                                prepend-inner-icon=\"mdi-cake\"\r\n                                required\r\n                        ></v-text-field>\r\n                        <v-select\r\n                                :items=\"this.$store.state.doctors\"\r\n                                v-model=\"doctorObj\"\r\n                                item-text=\"firstName\"\r\n                                item-value=\"id\"\r\n                                return-object\r\n                                dense\r\n                                outlined\r\n                                hide-details\r\n                                class=\"ma-2 pb-6\"\r\n                                label=\"doctors\"\r\n                                @change=\"chosenDoctor\"\r\n                        ></v-select>\r\n\r\n                        <v-select\r\n                                :items=\"timeslots\"\r\n                                v-model=\"appointment.appointmentTime\"\r\n                                item-text=\"\"\r\n                                item-value=\"id\"\r\n                                return-object\r\n                                dense\r\n                                outlined\r\n                                hide-details\r\n                                class=\"ma-2 pb-6\"\r\n                                label=\"timeslots\"\r\n                        ></v-select>\r\n                        <v-text-field\r\n                                v-model=\"appointment.description\"\r\n                                :counter=\"100\"\r\n                                label=\"Description\"\r\n                                required\r\n                        >\r\n                        </v-text-field>\r\n\r\n                        <v-btn type=\"submit\" :disabled=\"!valid\">Create Appointment</v-btn>\r\n                        <v-btn @click=\"clearInput\"> Clear Fields </v-btn>\r\n                    </v-form>\r\n                </v-card>\r\n            </div>\r\n        </v-col>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport AppointmentService from \"../services/AppointmentService\";\r\nimport Navbar from \"../components/Navbar.vue\";\r\nimport DoctorTimeService from \"../services/DoctorTimeService\";\r\n\r\nexport default {\r\n    name: \"AppointmentForm\",\r\n    components: {\r\n        Navbar,\r\n    },\r\n    data: () => ({\r\n        appointment: {\r\n            patientId: 0,\r\n            doctorId: null,\r\n            appointmentDuration: 30,\r\n            description: \"\",\r\n            appointmentDate: \"\",\r\n            appointmentTime: \"\",\r\n        },\r\n        timeslots: [],\r\n        valid: false,\r\n        selected: null,\r\n        dateSelected: null,\r\n        dateRules: [\r\n            (value) => {\r\n                if (value) return true;\r\n\r\n                return \"Date is required.\";\r\n            },\r\n            // eslint-disable-next-line\r\n            /* eslint-disable */\r\n            (value) => {\r\n                if (\r\n                    /^\\d{4}[\\-\\/\\s]?((((0[13578])|(1[02]))[\\-\\/\\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\\-\\/\\s]?(([0-2][0-9])|(30)))|(02[\\-\\/\\s]?[0-2][0-9]))$/.test(\r\n                        value\r\n                    )\r\n                )\r\n                    return true;\r\n\r\n                return \"Date must be in the format YYYY-MM-DD.\";\r\n            },\r\n        ],\r\n        timeRules: [\r\n            (value) => {\r\n                if (value) return true;\r\n\r\n                return \"Time is required.\";\r\n            },\r\n            (value) => {\r\n                if (/(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])/.test(value))\r\n                    return true;\r\n\r\n                return \"Time must be in the format 00:00:00.\";\r\n            },\r\n        ],\r\n    }),\r\n    methods: {\r\n        clearInput() {\r\n            this.$refs.appointmentForm.reset();\r\n        },\r\n        createAppointment() {\r\n            this.appointment.patientId = this.$store.state.currentPatient.patientId;\r\n            AppointmentService.createAppointment(this.appointment).then(\r\n                (response) => {\r\n                    if (response.status === 201) {\r\n                        this.getTimeslots();\r\n                    }\r\n                }\r\n            );\r\n            this.$router.push(\"/\");\r\n        },\r\n        getTimeSlotByIdAndDate(id, date) {\r\n            AppointmentService.getTimeArray(id, date).then((response) => {\r\n                this.timeSlots = response.data;\r\n            });\r\n            // service call here to pull data from doctor based on id this.selected and date selected this.dateSelected\r\n            // will i need to add a list of dates as well as a dropdown menu?\r\n        },\r\n        chosenDoctor() {\r\n            this.appointment.doctorId = this.doctorObj.doctorId;\r\n            console.log(\"id\", this.doctorObj.doctorId);\r\n            DoctorTimeService.getTimeArray(\r\n                this.appointment.doctorId,\r\n                this.appointment.appointmentDate\r\n            ).then((response) => {\r\n                this.timeslots = response.data;\r\n            });\r\n        },\r\n    },\r\n    created() {\r\n        this.appointment.patientId = this.$store.state.currentPatient.patientId;\r\n        // AppointmentService.getTimeArray(this.appointment.doctorId, this.appointment.appointmentDate).then(response => {\r\n        //   this.timeSlots = response.data;\r\n        // });\r\n    },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}