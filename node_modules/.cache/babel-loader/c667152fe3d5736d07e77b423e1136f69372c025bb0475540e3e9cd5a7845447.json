{"ast":null,"code":"// linear\nexport var linear = function linear(t) {\n  return t;\n}; // accelerating from zero velocity\n\nexport var easeInQuad = function easeInQuad(t) {\n  return Math.pow(t, 2);\n}; // decelerating to zero velocity\n\nexport var easeOutQuad = function easeOutQuad(t) {\n  return t * (2 - t);\n}; // acceleration until halfway, then deceleration\n\nexport var easeInOutQuad = function easeInOutQuad(t) {\n  return t < 0.5 ? 2 * Math.pow(t, 2) : -1 + (4 - 2 * t) * t;\n}; // accelerating from zero velocity\n\nexport var easeInCubic = function easeInCubic(t) {\n  return Math.pow(t, 3);\n}; // decelerating to zero velocity\n\nexport var easeOutCubic = function easeOutCubic(t) {\n  return Math.pow(--t, 3) + 1;\n}; // acceleration until halfway, then deceleration\n\nexport var easeInOutCubic = function easeInOutCubic(t) {\n  return t < 0.5 ? 4 * Math.pow(t, 3) : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}; // accelerating from zero velocity\n\nexport var easeInQuart = function easeInQuart(t) {\n  return Math.pow(t, 4);\n}; // decelerating to zero velocity\n\nexport var easeOutQuart = function easeOutQuart(t) {\n  return 1 - Math.pow(--t, 4);\n}; // acceleration until halfway, then deceleration\n\nexport var easeInOutQuart = function easeInOutQuart(t) {\n  return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n}; // accelerating from zero velocity\n\nexport var easeInQuint = function easeInQuint(t) {\n  return Math.pow(t, 5);\n}; // decelerating to zero velocity\n\nexport var easeOutQuint = function easeOutQuint(t) {\n  return 1 + Math.pow(--t, 5);\n}; // acceleration until halfway, then deceleration\n\nexport var easeInOutQuint = function easeInOutQuint(t) {\n  return t < 0.5 ? 16 * Math.pow(t, 5) : 1 + 16 * Math.pow(--t, 5);\n};","map":{"version":3,"mappings":"AAEA;AACA,OAAO,IAAMA,MAAM,GAAI,SAAVA,MAAM,CAAIC,CAAD;EAAA,OAAeA,CAA9B;AAAA,E,CACP;;AACA,OAAO,IAAMC,UAAU,GAAI,SAAdA,UAAU,CAAID,CAAD;EAAA,gBAAeA,CAAC,EAAI,CAAvC;AAAA,E,CACP;;AACA,OAAO,IAAME,WAAW,GAAI,SAAfA,WAAW,CAAIF,CAAD;EAAA,OAAeA,CAAC,IAAI,IAAIA,CAAR,CAApC;AAAA,E,CACP;;AACA,OAAO,IAAMG,aAAa,GAAI,SAAjBA,aAAa,CAAIH,CAAD;EAAA,OAAgBA,CAAC,GAAG,GAAJ,GAAU,aAAIA,CAAC,EAAI,CAAnB,IAAuB,CAAC,CAAD,GAAK,CAAC,IAAI,IAAIA,CAAT,IAAcA,CAAhF;AAAA,E,CACP;;AACA,OAAO,IAAMI,WAAW,GAAI,SAAfA,WAAW,CAAIJ,CAAD;EAAA,gBAAeA,CAAC,EAAI,CAAxC;AAAA,E,CACP;;AACA,OAAO,IAAMK,YAAY,GAAI,SAAhBA,YAAY,CAAIL,CAAD;EAAA,OAAe,WAAEA,CAAF,EAAO,CAAP,IAAW,CAA/C;AAAA,E,CACP;;AACA,OAAO,IAAMM,cAAc,GAAI,SAAlBA,cAAc,CAAIN,CAAD;EAAA,OAAeA,CAAC,GAAG,GAAJ,GAAU,aAAIA,CAAC,EAAI,CAAnB,IAAuB,CAACA,CAAC,GAAG,CAAL,KAAW,IAAIA,CAAJ,GAAQ,CAAnB,KAAyB,IAAIA,CAAJ,GAAQ,CAAjC,IAAsC,CAAnG;AAAA,E,CACP;;AACA,OAAO,IAAMO,WAAW,GAAI,SAAfA,WAAW,CAAIP,CAAD;EAAA,gBAAeA,CAAC,EAAI,CAAxC;AAAA,E,CACP;;AACA,OAAO,IAAMQ,YAAY,GAAI,SAAhBA,YAAY,CAAIR,CAAD;EAAA,OAAe,aAAI,EAAEA,CAAF,EAAO,CAA/C;AAAA,E,CACP;;AACA,OAAO,IAAMS,cAAc,GAAI,SAAlBA,cAAc,CAAIT,CAAD;EAAA,OAAgBA,CAAC,GAAG,GAAJ,GAAU,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAA1B,GAA8B,IAAI,IAAI,EAAEA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CAA3F;AAAA,E,CACP;;AACA,OAAO,IAAMU,WAAW,GAAI,SAAfA,WAAW,CAAIV,CAAD;EAAA,gBAAeA,CAAC,EAAI,CAAxC;AAAA,E,CACP;;AACA,OAAO,IAAMW,YAAY,GAAI,SAAhBA,YAAY,CAAIX,CAAD;EAAA,OAAe,aAAI,EAAEA,CAAF,EAAO,CAA/C;AAAA,E,CACP;;AACA,OAAO,IAAMY,cAAc,GAAI,SAAlBA,cAAc,CAAIZ,CAAD;EAAA,OAAeA,CAAC,GAAG,GAAJ,GAAU,cAAKA,CAAC,EAAI,CAApB,IAAwB,IAAI,cAAK,EAAEA,CAAF,EAAO,CAA9E;AAAA","names":["linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"sourceRoot":"","sources":["../../../src/services/goto/easing-patterns.ts"],"sourcesContent":["export type EasingFunction = (t: number) => number\n\n// linear\nexport const linear = (t: number) => t\n// accelerating from zero velocity\nexport const easeInQuad = (t: number) => t ** 2\n// decelerating to zero velocity\nexport const easeOutQuad = (t: number) => t * (2 - t)\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = (t: number) => (t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t)\n// accelerating from zero velocity\nexport const easeInCubic = (t: number) => t ** 3\n// decelerating to zero velocity\nexport const easeOutCubic = (t: number) => --t ** 3 + 1\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = (t: number) => t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n// accelerating from zero velocity\nexport const easeInQuart = (t: number) => t ** 4\n// decelerating to zero velocity\nexport const easeOutQuart = (t: number) => 1 - --t ** 4\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t)\n// accelerating from zero velocity\nexport const easeInQuint = (t: number) => t ** 5\n// decelerating to zero velocity\nexport const easeOutQuint = (t: number) => 1 + --t ** 5\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = (t: number) => t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}