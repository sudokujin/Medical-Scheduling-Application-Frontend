{"ast":null,"code":"import _defineProperty from \"C:/Users/guild/workspace/MedicalSchedulerApp/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport Vue from 'vue';\nexport function factory() {\n  var _watch;\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input';\n  return Vue.extend({\n    name: 'toggleable',\n    model: {\n      prop: prop,\n      event: event\n    },\n    props: _defineProperty({}, prop, {\n      required: false\n    }),\n    data: function data() {\n      return {\n        isActive: !!this[prop]\n      };\n    },\n    watch: (_watch = {}, _defineProperty(_watch, prop, function (val) {\n      this.isActive = !!val;\n    }), _defineProperty(_watch, \"isActive\", function isActive(val) {\n      !!val !== this[prop] && this.$emit(event, val);\n    }), _watch)\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\nvar Toggleable = factory();\nexport default Toggleable;","map":{"version":3,"mappings":";AAAA,OAAOA,GAAP,MAAoC,KAApC;AAKA,OAAM,SAAUC,OAAV,GAAkD;EAAA;EAAA,IAA/BC,IAAI,uEAAG,OAA1B;EAAA,IAAmCC,KAAK,uEAAG,OAA3C;EACJ,OAAOH,GAAG,CAACI,MAAJ,CAAW;IAChBC,IAAI,EAAE,YADU;IAGhBC,KAAK,EAAE;MAAEJ,IAAF,EAAEA,IAAF;MAAQC;IAAR,CAHS;IAKhBI,KAAK,sBACFL,IAAD,EAAQ;MAAEM,QAAQ,EAAE;IAAZ,EANM;IAShBC,IAAI;MACF,OAAO;QACLC,QAAQ,EAAE,CAAC,CAAC,KAAKR,IAAL;MADP,CAAP;IAGD,CAbe;IAehBS,KAAK,wCACFT,IAAD,YAAQU,GAAR,EAAW;MACT,KAAKF,QAAL,GAAgB,CAAC,CAACE,GAAlB;IACD,CAHI,yDAIKA,GAAF,EAAK;MACX,CAAC,CAACA,GAAF,KAAU,KAAKV,IAAL,CAAV,IAAwB,KAAKW,KAAL,CAAWV,KAAX,EAAkBS,GAAlB,CAAxB;IACD;EArBa,CAAX,CAAP;AAwBD;AAED;;AACA,IAAME,UAAU,GAAGb,OAAO,EAA1B;AAEA,eAAea,UAAf","names":["Vue","factory","prop","event","extend","name","model","props","required","data","isActive","watch","val","$emit","Toggleable"],"sourceRoot":"","sources":["../../../src/mixins/toggleable/index.ts"],"sourcesContent":["import Vue, { VueConstructor } from 'vue'\n\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}