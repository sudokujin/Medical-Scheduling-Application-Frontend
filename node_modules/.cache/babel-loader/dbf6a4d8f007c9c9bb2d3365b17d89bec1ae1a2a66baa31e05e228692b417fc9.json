{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport Navbar from \"../components/Navbar.vue\";\nimport AppointmentService from \"../services/AppointmentService\";\nexport default {\n  name: \"calendar\",\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      type: \"month\",\n      types: [\"month\", \"week\", \"day\"],\n      mode: \"stack\",\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [{\n        text: \"Sun - Sat\",\n        value: [0, 1, 2, 3, 4, 5, 6]\n      }, {\n        text: \"Mon - Sun\",\n        value: [1, 2, 3, 4, 5, 6, 0]\n      }, {\n        text: \"Mon - Fri\",\n        value: [1, 2, 3, 4, 5]\n      }],\n      value: \"\",\n      events: [],\n      colors: [\"blue\"],\n      names: [\"Appointment\", \"Holiday\", \"PTO\"],\n      appointments: [],\n      now: \"2023-04-20\",\n      selectedDoctorId: null,\n      // id of doctor,\n      doctors: [],\n      doctorObj: {}\n    };\n  },\n  methods: {\n    chosenDoctor: function chosenDoctor() {\n      this.selectedDoctorId = this.doctorObj.doctorId;\n    },\n    getAppointments: function getAppointments() {\n      var _this = this;\n      AppointmentService.getAppointments().then(function (response) {\n        _this.$store.commit(\"SET_APPOINTMENTS\", response.data);\n        _this.appointments = _this.$store.state.appointments;\n        _this.getEvents();\n      });\n    },\n    getEvents: function getEvents() {\n      for (var i = 0; i < this.appointments.length; i++) {\n        var temp = this.appointments[i];\n        var time = this.appointments[i].appointmentTime;\n        var endTime = void 0;\n        if (time.slice(3, 5) === \"30\") {\n          endTime = time.slice(0, 2);\n          parseInt(endTime);\n          endTime++;\n          endTime = endTime.toString() + \":00:00\";\n        } else {\n          endTime = time.slice(0, 2) + \":30:00\";\n        }\n        var event = {\n          docId: this.appointments[i].doctorId,\n          name: \"Appointment\",\n          start: temp.appointmentDate + \"T\" + temp.appointmentTime,\n          end: temp.appointmentDate += \"T\" + endTime,\n          color: \"blue\",\n          timed: false\n        };\n        this.events.push(event);\n      }\n    }\n  },\n  computed: {\n    // This should filter doctor apponintments by id - attached to :events for calendar\n    filteredAppointments: function filteredAppointments() {\n      var _this2 = this;\n      return this.events.filter(function (appt) {\n        return appt.docId === _this2.selectedDoctorId;\n      });\n    }\n  },\n  created: function created() {\n    this.getAppointments();\n    this.doctors = this.$store.state.doctors;\n  }\n};","map":{"version":3,"mappings":";;;;;;;;AA6DA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC,WACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACAC;QACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;QACA;QACA;UACAC;UACAC;UACAD;UACAA;QACA;UACAA;QACA;QACA;UACAE;UACA1B;UACA2B;UACAC;UACAC;UACAC;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MAAA;MACA;QAAA;MAAA;IACA;EACA;EACAC;IACA;IACA;EACA;AACA","names":["name","components","Navbar","data","type","types","mode","weekday","weekdays","text","value","events","colors","names","appointments","now","selectedDoctorId","doctors","doctorObj","methods","chosenDoctor","getAppointments","AppointmentService","getEvents","endTime","parseInt","docId","start","end","color","timed","computed","filteredAppointments","created"],"sourceRoot":"src/components","sources":["Calendar.vue"],"sourcesContent":["<template>\n  <v-container>\n    <navbar />\n    <v-divider></v-divider>\n    <h1>Weekly Calendar</h1>\n    <v-spacer></v-spacer>\n    <div>\n      <v-sheet tile height=\"54\" class=\"d-flex\">\n        <v-btn icon class=\"ma-2\" @click=\"$refs.calendar.prev()\">\n          <v-icon>mdi-chevron-left</v-icon>\n        </v-btn>\n        <v-select\n          v-model=\"type\"\n          :items=\"types\"\n          dense\n          outlined\n          hide-details\n          class=\"ma-2\"\n          label=\"type\"\n        ></v-select>\n        <v-select\n          :items=\"this.$store.state.doctors\"\n          v-model=\"doctorObj\"\n          item-text=\"firstName\"\n          item-value=\"doctorId\"\n          return-object\n          dense\n          outlined\n          hide-details\n          class=\"ma-2\"\n          label=\"doctors\"\n          @change=\"chosenDoctor\"\n        ></v-select>\n        <v-select\n          v-model=\"weekday\"\n          :items=\"weekdays\"\n          dense\n          outlined\n          hide-details\n          label=\"weekdays\"\n          class=\"ma-2\"\n        ></v-select>\n        <v-spacer></v-spacer>\n        <v-btn icon class=\"ma-2\" @click=\"$refs.calendar.next()\">\n          <v-icon>mdi-chevron-right</v-icon>\n        </v-btn>\n      </v-sheet>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"value\"\n          :weekdays=\"weekday\"\n          :type=\"type\"\n          :events=\"filteredAppointments\"\n          :now=\"now\"\n        ></v-calendar>\n      </v-sheet>\n    </div>\n  </v-container>\n</template>\n<script>\nimport Navbar from \"../components/Navbar.vue\";\nimport AppointmentService from \"../services/AppointmentService\";\n\nexport default {\n  name: \"calendar\",\n  components: {\n    Navbar,\n  },\n  data() {\n    return {\n      type: \"month\",\n      types: [\"month\", \"week\", \"day\"],\n      mode: \"stack\",\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [\n        { text: \"Sun - Sat\", value: [0, 1, 2, 3, 4, 5, 6] },\n        { text: \"Mon - Sun\", value: [1, 2, 3, 4, 5, 6, 0] },\n        { text: \"Mon - Fri\", value: [1, 2, 3, 4, 5] },\n      ],\n      value: \"\",\n      events: [],\n      colors: [\"blue\"],\n      names: [\"Appointment\", \"Holiday\", \"PTO\"],\n      appointments: [],\n      now: \"2023-04-20\",\n      selectedDoctorId: null, // id of doctor,\n      doctors: [],\n      doctorObj: {},\n    };\n  },\n  methods: {\n    chosenDoctor() {\n      this.selectedDoctorId = this.doctorObj.doctorId;\n    },\n    getAppointments() {\n      AppointmentService.getAppointments().then((response) => {\n        this.$store.commit(\"SET_APPOINTMENTS\", response.data);\n        this.appointments = this.$store.state.appointments;\n        this.getEvents();\n      });\n    },\n    getEvents() {\n      for (let i = 0; i < this.appointments.length; i++) {\n        let temp = this.appointments[i];\n        let time = this.appointments[i].appointmentTime;\n        let endTime;\n        if (time.slice(3, 5) === \"30\") {\n          endTime = time.slice(0, 2);\n          parseInt(endTime);\n          endTime++;\n          endTime = endTime.toString() + \":00:00\";\n        } else {\n          endTime = time.slice(0, 2) + \":30:00\";\n        }\n        let event = {\n          docId: this.appointments[i].doctorId,\n          name: \"Appointment\",\n          start: temp.appointmentDate + \"T\" + temp.appointmentTime,\n          end: (temp.appointmentDate += \"T\" + endTime),\n          color: \"blue\",\n          timed: false,\n        };\n        this.events.push(event);\n      }\n    },\n  },\n  computed: {\n    // This should filter doctor apponintments by id - attached to :events for calendar\n    filteredAppointments() {\n      return this.events.filter((appt) => appt.docId === this.selectedDoctorId);\n    },\n  },\n  created() {\n    this.getAppointments();\n    this.doctors = this.$store.state.doctors;\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}