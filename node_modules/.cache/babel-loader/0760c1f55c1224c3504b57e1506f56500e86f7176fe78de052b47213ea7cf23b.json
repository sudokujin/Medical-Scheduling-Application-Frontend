{"ast":null,"code":"import axios from 'axios';\nvar http = axios.create({\n  baseURL: \"https://medical-scheduling-application.herokuapp.com/\"\n});\nexport default {\n  getAppointments: function getAppointments() {\n    return http.get(\"/appointments\");\n  },\n  getAppointmentById: function getAppointmentById(id) {\n    return http.get(\"/appointments/\".concat(id));\n  },\n  getAppointmentByPatientId: function getAppointmentByPatientId(id) {\n    return http.get(\"/appointments/patient/\".concat(id));\n  },\n  getAppointmentByDoctorId: function getAppointmentByDoctorId(id) {\n    return http.get(\"/appointments/doctor/\".concat(id));\n  },\n  getAppointmentsTodayAndLaterForDoctor: function getAppointmentsTodayAndLaterForDoctor(id) {\n    return http.get(\"/appointments/doctorToday/\".concat(id));\n  },\n  getAppointmentbyDate: function getAppointmentbyDate(appointmentDate) {\n    return http.get(\"/appointments/date/\".concat(appointmentDate));\n  },\n  createAppointment: function createAppointment(appointment) {\n    return http.post('/appointments', appointment);\n  },\n  updateAppointment: function updateAppointment(id, appointment) {\n    return http.put(\"/appointments/\".concat(id), appointment);\n  },\n  deleteAppointment: function deleteAppointment(id) {\n    return http[\"delete\"](\"/appointments/\".concat(id));\n  },\n  getPatientAppointmentsByUserId: function getPatientAppointmentsByUserId(userId) {\n    return http.get(\"/appointments/patient/user/\".concat(userId));\n  },\n  getDoctorAppointmentsByUserId: function getDoctorAppointmentsByUserId(userId) {\n    return http.get(\"/appointments/doctor/user/\".concat(userId));\n  }\n};","map":{"version":3,"names":["axios","http","create","baseURL","getAppointments","get","getAppointmentById","id","concat","getAppointmentByPatientId","getAppointmentByDoctorId","getAppointmentsTodayAndLaterForDoctor","getAppointmentbyDate","appointmentDate","createAppointment","appointment","post","updateAppointment","put","deleteAppointment","getPatientAppointmentsByUserId","userId","getDoctorAppointmentsByUserId"],"sources":["/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/src/services/AppointmentService.js"],"sourcesContent":["import axios from 'axios';\nconst http = axios.create({\n    baseURL:\"https://medical-scheduling-application.herokuapp.com/\"\n});\n\nexport default{\n    getAppointments() {\n        return http.get(`/appointments`);\n    },\n    getAppointmentById(id) {\n        return http.get(`/appointments/${id}`);\n    },\n    getAppointmentByPatientId(id) {\n        return http.get(`/appointments/patient/${id}`);\n    },\n    getAppointmentByDoctorId(id){\n        return http.get(`/appointments/doctor/${id}`);\n    },\n    getAppointmentsTodayAndLaterForDoctor(id) {\n        return http.get(`/appointments/doctorToday/${id}`);\n    },\n    getAppointmentbyDate(appointmentDate) {\n      return http.get(`/appointments/date/${appointmentDate}`);\n    },\n    createAppointment(appointment) {\n        return http.post('/appointments', appointment);\n    },\n    updateAppointment(id, appointment) {\n        return http.put(`/appointments/${id}`, appointment);\n    },\n    deleteAppointment(id) {\n        return http.delete(`/appointments/${id}`)\n    },\n\n    getPatientAppointmentsByUserId(userId) {\n        return http.get(`/appointments/patient/user/${userId}`)\n    },\n\n    getDoctorAppointmentsByUserId(userId) {\n        return http.get(`/appointments/doctor/user/${userId}`)\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACtBC,OAAO,EAAC;AACZ,CAAC,CAAC;AAEF,eAAc;EACVC,eAAe,WAAAA,gBAAA,EAAG;IACd,OAAOH,IAAI,CAACI,GAAG,gBAAgB,CAAC;EACpC,CAAC;EACDC,kBAAkB,WAAAA,mBAACC,EAAE,EAAE;IACnB,OAAON,IAAI,CAACI,GAAG,kBAAAG,MAAA,CAAkBD,EAAE,CAAE,CAAC;EAC1C,CAAC;EACDE,yBAAyB,WAAAA,0BAACF,EAAE,EAAE;IAC1B,OAAON,IAAI,CAACI,GAAG,0BAAAG,MAAA,CAA0BD,EAAE,CAAE,CAAC;EAClD,CAAC;EACDG,wBAAwB,WAAAA,yBAACH,EAAE,EAAC;IACxB,OAAON,IAAI,CAACI,GAAG,yBAAAG,MAAA,CAAyBD,EAAE,CAAE,CAAC;EACjD,CAAC;EACDI,qCAAqC,WAAAA,sCAACJ,EAAE,EAAE;IACtC,OAAON,IAAI,CAACI,GAAG,8BAAAG,MAAA,CAA8BD,EAAE,CAAE,CAAC;EACtD,CAAC;EACDK,oBAAoB,WAAAA,qBAACC,eAAe,EAAE;IACpC,OAAOZ,IAAI,CAACI,GAAG,uBAAAG,MAAA,CAAuBK,eAAe,CAAE,CAAC;EAC1D,CAAC;EACDC,iBAAiB,WAAAA,kBAACC,WAAW,EAAE;IAC3B,OAAOd,IAAI,CAACe,IAAI,CAAC,eAAe,EAAED,WAAW,CAAC;EAClD,CAAC;EACDE,iBAAiB,WAAAA,kBAACV,EAAE,EAAEQ,WAAW,EAAE;IAC/B,OAAOd,IAAI,CAACiB,GAAG,kBAAAV,MAAA,CAAkBD,EAAE,GAAIQ,WAAW,CAAC;EACvD,CAAC;EACDI,iBAAiB,WAAAA,kBAACZ,EAAE,EAAE;IAClB,OAAON,IAAI,UAAO,kBAAAO,MAAA,CAAkBD,EAAE,CAAE,CAAC;EAC7C,CAAC;EAEDa,8BAA8B,WAAAA,+BAACC,MAAM,EAAE;IACnC,OAAOpB,IAAI,CAACI,GAAG,+BAAAG,MAAA,CAA+Ba,MAAM,CAAE,CAAC;EAC3D,CAAC;EAEDC,6BAA6B,WAAAA,8BAACD,MAAM,EAAE;IAClC,OAAOpB,IAAI,CAACI,GAAG,8BAAAG,MAAA,CAA8Ba,MAAM,CAAE,CAAC;EAC1D;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}