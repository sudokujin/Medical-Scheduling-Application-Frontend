{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\n/* eslint-disable */\nvar userId = 5;\nvar http = axios.create({\n  baseURL: \"https://medical-scheduling-application.herokuapp.com/\"\n});\nexport default {\n  getAllDoctors: function getAllDoctors() {\n    return http.get('/doctors');\n  },\n  get: function get(id) {\n    return http.get(\"/doctors/\".concat(id));\n  },\n  createDoctor: function createDoctor(doctor) {\n    return http.post('/doctors', doctor);\n  },\n  updateDoctor: function updateDoctor(id, doctor) {\n    return http.put(\"/doctors/\".concat(id), doctor);\n  },\n  deleteDoctor: function deleteDoctor(id) {\n    return http[\"delete\"](\"/doctors/\".concat(id));\n  },\n  getMaxId: function getMaxId() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var config, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                'Accept': 'application/json'\n              }\n            };\n            _context.next = 3;\n            return http.get('/doctors/maxId', config);\n          case 3:\n            response = _context.sent;\n            _this.response = JSON.parse(response.data.userId);\n            console.log(_this.response);\n            return _context.abrupt(\"return\", _this.response);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  getCurrentDoctorId: function getCurrentDoctorId(userId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var config, response, doctorId;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            config = {\n              headers: {\n                'Accept': 'application/json'\n              }\n            };\n            _context2.next = 3;\n            return http.get(\"/doctors/getDoctorId/\".concat(userId), config);\n          case 3:\n            response = _context2.sent;\n            doctorId = JSON.parse(response.data.doctorId);\n            console.log(doctorId);\n            return _context2.abrupt(\"return\", doctorId);\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  },\n  getDoctorByUserId: function getDoctorByUserId(id) {}\n};","map":{"version":3,"names":["axios","userId","http","create","baseURL","getAllDoctors","get","id","concat","createDoctor","doctor","post","updateDoctor","put","deleteDoctor","getMaxId","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_callee$","_context","prev","next","headers","sent","JSON","parse","data","console","log","abrupt","stop","getCurrentDoctorId","_callee2","doctorId","_callee2$","_context2","getDoctorByUserId"],"sources":["/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/src/services/DoctorService.js"],"sourcesContent":["import axios from 'axios';\n/* eslint-disable */\nvar userId = 5;\nconst http = axios.create({\n    baseURL: \"https://medical-scheduling-application.herokuapp.com/\"\n});\n\nexport default {\n    getAllDoctors() {\n        return http.get('/doctors');\n    },\n\n    get(id) {\n        return http.get(`/doctors/${id}`);\n    },\n\n    createDoctor(doctor) {\n        return http.post('/doctors', doctor);\n    },\n    \n    updateDoctor(id, doctor) {\n        return http.put(`/doctors/${id}`, doctor);\n    },\n\n    deleteDoctor(id) {\n        return http.delete(`/doctors/${id}`);\n    },\n    async getMaxId() {\n        let config = {\n            headers: {\n                'Accept': 'application/json'\n            }\n        }\n        const response = await http.get('/doctors/maxId', config)\n        this.response = JSON.parse(response.data.userId);\n        console.log(this.response);\n        return this.response;\n    },\n    async getCurrentDoctorId(userId) {\n        let config = {\n            headers: {\n                'Accept' : 'application/json'\n            }\n        }\n        const response = await http.get(`/doctors/getDoctorId/${userId}`, config);\n        let doctorId = JSON.parse(response.data.doctorId);\n        console.log(doctorId);\n        return doctorId;\n    },\n    getDoctorByUserId(id) {\n        \n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}