{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport reviewService from \"../services/ReviewService.js\";\nimport navBar from \"./Navbar.vue\";\nexport default {\n  name: \"reviews\",\n  components: {\n    navBar: navBar\n  },\n  data: function data() {\n    return {\n      doctorName: \"\",\n      doctorId: null,\n      patientName: \"\",\n      patientId: null,\n      title: \"Research our doctors so you can make the best choice for your needs!\",\n      newReview: {},\n      showForm: false,\n      filter: 0,\n      reviews: [],\n      selectedDoctorId: null,\n      doctors: [],\n      doctorObj: {}\n    };\n  },\n  methods: {\n    getAllReviews: function getAllReviews() {\n      var _this = this;\n      reviewService.getAllReviews().then(function (response) {\n        _this.$store.commit(\"SET_REVIEWS\", response.data);\n      });\n    },\n    chosenDoctor: function chosenDoctor() {\n      this.selectedDoctorId = this.doctorObj.doctorId;\n    },\n    addNewReview: function addNewReview() {\n      var _this2 = this;\n      reviewService.createReview(this.newReview).then(function (response) {\n        if (response.status === 201) {\n          // this.$router.push('/reviews');\n          _this2.getAllReviews();\n        }\n      });\n    },\n    getReviewsByDoctor: function getReviewsByDoctor() {\n      reviewService.getReviewsByDoctorId();\n    },\n    resetForm: function resetForm() {\n      this.newReview = {};\n      this.showForm = false;\n    },\n    numberOfReviews: function numberOfReviews(numOfStars) {\n      var reviewsWithNumStars = this.reviews.filter(function (review) {\n        return review.reviewRating === numOfStars;\n      });\n      return reviewsWithNumStars.length;\n    }\n  },\n  computed: {\n    averageRating: function averageRating() {\n      var sum = this.reviews.reduce(function (currentSum, review) {\n        return currentSum + review.rating;\n      }, 0);\n      return (sum / this.reviews.length).toFixed(2);\n    },\n    numberOfOneStarReviews: function numberOfOneStarReviews() {\n      return this.numberOfReviews(1);\n    },\n    numberOfTwoStarReviews: function numberOfTwoStarReviews() {\n      return this.numberOfReviews(2);\n    },\n    numberOfThreeStarReviews: function numberOfThreeStarReviews() {\n      return this.numberOfReviews(3);\n    },\n    numberOfFourStarReviews: function numberOfFourStarReviews() {\n      return this.numberOfReviews(4);\n    },\n    numberOfFiveStarReviews: function numberOfFiveStarReviews() {\n      return this.numberOfReviews(5);\n    },\n    filteredReviews: function filteredReviews() {\n      var _this3 = this;\n      // filtered reviews will grab review list, and filter through them based on the doctor id to display each doctors reviews\n      // maybe I need a drop down menu like v-calendar to choose which doctor to see reviews for?? This way I can get the id and compare\n      // to the review id\n      return this.events.filter(function (review) {\n        return review.docId === _this3.selectedDoctorId;\n      });\n    }\n  },\n  created: function created() {\n    this.getAllReviews();\n    this.reviews = this.$store.state.reviews;\n    this.doctors = this.$store.state.doctors;\n  }\n};","map":{"version":3,"mappings":";;;;AAoJA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC,OACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MAAA;MACAC;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACAF;QACA;UACA;UACA;QACA;MACA;IACA;IACAG;MACAH;IACA;IACAI;MACA;MACA;IACA;IACAC;MACA,8CACA;QAAA;MAAA,EACA;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;QAAA;MAAA;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;AACA","names":["name","components","navBar","data","doctorName","doctorId","patientName","patientId","title","newReview","showForm","filter","reviews","selectedDoctorId","doctors","doctorObj","methods","getAllReviews","reviewService","chosenDoctor","addNewReview","getReviewsByDoctor","resetForm","numberOfReviews","computed","averageRating","numberOfOneStarReviews","numberOfTwoStarReviews","numberOfThreeStarReviews","numberOfFourStarReviews","numberOfFiveStarReviews","filteredReviews","created"],"sourceRoot":"src/components","sources":["Review.vue"],"sourcesContent":["<template>\n  <v-container>\n    <nav-bar />\n    <div class=\"main\">\n      <h2>Reviews for {{ this.doctorName }}</h2>\n      <p class=\"description\">{{ this.title }}</p>\n\n      <div class=\"well-display\">\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 1\">{{\n            numberOfOneStarReviews\n          }}</span>\n          1 Star Review{{ numberOfOneStarReviews === 1 ? \"\" : \"s\" }}\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 2\">{{\n            numberOfTwoStarReviews\n          }}</span>\n          2 Star Review{{ numberOfTwoStarReviews === 1 ? \"\" : \"s\" }}\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 3\">{{\n            numberOfThreeStarReviews\n          }}</span>\n          3 Star Review{{ numberOfThreeStarReviews === 1 ? \"\" : \"s\" }}\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 4\">{{\n            numberOfFourStarReviews\n          }}</span>\n            <v-rating\n                    hover\n                    length=\"4\"\n                    readonly\n                    size=\"20\"\n                    color=\"yellow\"\n                    value=\"4\"\n            ></v-rating>\n        </div>\n\n          <div class=\"well\">\n              <v-col align=\"center\" justify=\"center\" fill-height class=\"d-flex justify-center\">\n          <span class=\"amount\" v-on:click=\"filter = 5\">{{\n            numberOfFiveStarReviews\n          }}</span>\n            <v-rating\n                    hover\n                    length=\"5\"\n                    readonly\n                    size=\"20\"\n                    color=\"yellow\"\n                    value=\"5\"\n            ></v-rating>\n              </v-col>\n        </div>\n      </div>\n\n      <a\n        id=\"show-form-button\"\n        href=\"#\"\n        v-on:click.prevent=\"showForm = true\"\n        v-if=\"showForm === false\"\n        >Show Form</a\n      >\n      <v-col fill-height class=\"d-flex justify-start\">\n        <v-card>\n          <v-form\n            class=\"px-6 pb-5 pt-6\"\n            v-on:submit.prevent=\"addNewReview\"\n            v-if=\"showForm === true\"\n          >\n            <div class=\"form-element\">\n              <label for=\"reviewer\">Name:</label>\n              <input\n                id=\"reviewer\"\n                type=\"text\"\n                v-model=\"newReview.patientName\"\n              />\n              <!-- patient name here based on patient id -->\n            </div>\n            <div class=\"form-element\">\n              <label for=\"title\">Title:</label>\n              <input id=\"title\" type=\"text\" v-model=\"newReview.reviewTitle\" />\n              <!-- review title here based on patient id/doc id/review id -->\n            </div>\n            <div class=\"form-element\">\n              <label for=\"rating\">Rating:</label>\n              <select id=\"rating\" v-model.number=\"newReview.reviewRating\">\n                <!-- review_rating based on patient id/doc id/review id -->\n                <option value=\"1\">1 Star</option>\n                <option value=\"2\">2 Stars</option>\n                <option value=\"3\">3 Stars</option>\n                <option value=\"4\">4 Stars</option>\n                <option value=\"5\">5 Stars</option>\n              </select>\n            </div>\n            <div class=\"form-element\">\n              <label for=\"review\">Review:</label>\n              <textarea id=\"review\" v-model=\"newReview.reviewBody\"></textarea>\n              <!-- review_body based on patient id/doc id/review id -->\n            </div>\n            <input type=\"submit\" value=\"Save\" />\n            <!-- post to database review table on submit button being clicked -->\n            <input type=\"button\" value=\"Cancel\" v-on:click=\"resetForm\" />\n          </v-form>\n        </v-card>\n      </v-col>\n      <v-select\n        :items=\"doctors\"\n        v-model=\"doctorObj\"\n        item-text=\"firstName\"\n        item-value=\"doctorId\"\n        return-object\n        dense\n        outlined\n        hide-details\n        class=\"ma-2\"\n        label=\"doctors\"\n        @change=\"chosenDoctor\"\n      ></v-select>\n      <div\n        class=\"review\"\n        v-for=\"review in this.$store.state.reviews\"\n        v-bind:key=\"review.id\"\n      >\n        <!-- loop over review objects based on a filtered review list of doctors by id , do not need favorited section line 77-->\n        <h4>{{ review.patientName }}</h4>\n        <!-- patient name here based on patient id -->\n        <div class=\"rating\">\n          <img\n            src=\"../assets/star.png\"\n            v-bind:title=\"review.reviewRating + ' Star Review'\"\n            class=\"ratingStar\"\n            v-for=\"n in review.reviewRating\"\n            v-bind:key=\"n\"\n          />\n        </div>\n        <h3>{{ review.reviewTitle }}</h3>\n\n        <p>{{ review.reviewBody }}</p>\n      </div>\n    </div>\n  </v-container>\n</template>\n<script>\nimport reviewService from \"../services/ReviewService.js\";\nimport navBar from \"./Navbar.vue\";\n\nexport default {\n  name: \"reviews\",\n  components: {\n    navBar,\n  },\n  data() {\n    return {\n      doctorName: \"\",\n      doctorId: null,\n      patientName: \"\",\n      patientId: null,\n      title:\n        \"Research our doctors so you can make the best choice for your needs!\",\n      newReview: {},\n      showForm: false,\n      filter: 0,\n      reviews: [],\n      selectedDoctorId: null,\n      doctors: [],\n      doctorObj: {},\n    };\n  },\n  methods: {\n    getAllReviews() {\n      reviewService.getAllReviews().then((response) => {\n        this.$store.commit(\"SET_REVIEWS\", response.data);\n      });\n    },\n    chosenDoctor() {\n      this.selectedDoctorId = this.doctorObj.doctorId;\n    },\n    addNewReview() {\n      reviewService.createReview(this.newReview).then((response) => {\n        if (response.status === 201) {\n          // this.$router.push('/reviews');\n          this.getAllReviews();\n        }\n      });\n    },\n    getReviewsByDoctor() {\n      reviewService.getReviewsByDoctorId();\n    },\n    resetForm() {\n      this.newReview = {};\n      this.showForm = false;\n    },\n    numberOfReviews(numOfStars) {\n      const reviewsWithNumStars = this.reviews.filter(\n        (review) => review.reviewRating === numOfStars\n      );\n      return reviewsWithNumStars.length;\n    },\n  },\n  computed: {\n    averageRating() {\n      let sum = this.reviews.reduce((currentSum, review) => {\n        return currentSum + review.rating;\n      }, 0);\n      return (sum / this.reviews.length).toFixed(2);\n    },\n    numberOfOneStarReviews() {\n      return this.numberOfReviews(1);\n    },\n    numberOfTwoStarReviews() {\n      return this.numberOfReviews(2);\n    },\n    numberOfThreeStarReviews() {\n      return this.numberOfReviews(3);\n    },\n    numberOfFourStarReviews() {\n      return this.numberOfReviews(4);\n    },\n    numberOfFiveStarReviews() {\n      return this.numberOfReviews(5);\n    },\n      filteredReviews() {\n          // filtered reviews will grab review list, and filter through them based on the doctor id to display each doctors reviews\n          // maybe I need a drop down menu like v-calendar to choose which doctor to see reviews for?? This way I can get the id and compare\n          // to the review id\n          return this.events.filter((review) => review.docId === this.selectedDoctorId);\n      },\n  },\n  created() {\n    this.getAllReviews();\n    this.reviews = this.$store.state.reviews;\n    this.doctors = this.$store.state.doctors;\n  },\n};\n</script>\n\n<style scoped>\ndiv.main {\n  margin: 1rem 0;\n}\n\ndiv.main div.well-display {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 1rem;\n}\n\ndiv.main div.well-display div.well {\n  display: inline-block;\n  width: 15%;\n  border: 1px black solid;\n  border-radius: 6px;\n  text-align: center;\n  margin: 0.25rem;\n  padding: 0.25rem;\n}\n\ndiv.main div.well-display div.well span.amount {\n  color: darkslategray;\n  display: block;\n  font-size: 2.5rem;\n}\n\ndiv.main div.review {\n  border: 1px black solid;\n  border-radius: 6px;\n  padding: 1rem;\n  margin: 10px;\n}\n\ndiv.main div.review.favorited {\n  background-color: lightyellow;\n}\n\ndiv.main div.review div.rating {\n  height: 2rem;\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0.5rem;\n}\n\ndiv.main div.review div.rating img {\n  height: 100%;\n}\n\ndiv.main div.review p {\n  margin: 20px;\n}\n\ndiv.main div.review h3 {\n  display: inline-block;\n}\n\ndiv.main div.review h4 {\n  font-size: 1rem;\n}\n\ndiv.form-element {\n  margin-top: 10px;\n}\ndiv.form-element > label {\n  display: block;\n}\ndiv.form-element > input,\ndiv.form-element > select {\n  height: 30px;\n  width: 300px;\n}\ndiv.form-element > textarea {\n  height: 60px;\n  width: 300px;\n}\nform > input[type=\"button\"] {\n  width: 100px;\n}\nform > input[type=\"submit\"] {\n  width: 100px;\n  margin-right: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}