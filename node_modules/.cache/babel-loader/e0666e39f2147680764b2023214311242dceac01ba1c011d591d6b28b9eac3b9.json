{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/guild/workspace/MedicalSchedulerApp/vue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/guild/workspace/MedicalSchedulerApp/vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport DoctorList from \"../components/DoctorList.vue\";\nimport PatientList from \"../components/PatientList.vue\";\nimport AdminView from \"../components/AdminView.vue\";\nimport Navbar from \"../components/Navbar.vue\";\nimport PatientService from \"@/services/PatientService\";\nimport DoctorService from \"@/services/DoctorService\";\nimport AppointmentService from \"@/services/AppointmentService\";\nexport default {\n  name: \"home\",\n  components: {\n    DoctorList: DoctorList,\n    PatientList: PatientList,\n    AdminView: AdminView,\n    Navbar: Navbar\n  },\n  watch: {\n    getPatientId: {\n      handler: \"isPatient\",\n      immediate: true\n    },\n    getDoctorId: {\n      handler: \"isDoctor\",\n      immediate: true\n    }\n  },\n  methods: {\n    isPatient: function isPatient() {\n      var _this = this;\n      if (this.$store.state.user.authorities[0].name === \"ROLE_USER\") {\n        PatientService.getPatientByUserId(this.$store.state.user.id).then(function (response) {\n          _this.$store.commit(\"SET_PATIENT\", response.data);\n        });\n        this.setPatientAppointments();\n        // PatientService.getCurrentPatientId(this.$store.state.user.id).then(\n        //     // eslint-disable-next-line no-unused-vars\n        //     (response) => {\n        //         this.$store.commit(\"SET_PATIENT_ID\", this.response));\n        //     }\n        // );\n        // console.log(this.$store.state.patientId + \" it worked!\");\n      }\n    },\n    setPatientAppointments: function setPatientAppointments() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                AppointmentService.getAppointmentByPatientId(_this2.$store.state.patientId).then(function (response) {\n                  _this2.$store.commit(\"SET_CURRENT_APPOINTMENTS\", response.data);\n                });\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    isDoctor: function isDoctor() {\n      var _this3 = this;\n      if (this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\") {\n        // DoctorService.getDoctorByUserId(this.$store.state.user.id).then(\n        //     (response) => {\n        //         this.$store.commit(\"SET_DOCTOR\", response.data);\n        //     }\n        // );\n        DoctorService.getCurrentDoctorId(this.$store.state.user.id).then(\n        // eslint-disable-next-line no-unused-vars\n        function (response) {\n          _this3.$store.commit(\"SET_DOCTOR_ID\", parseInt(_this3.response));\n        });\n      }\n    }\n  },\n  computed: {\n    getRoleAdmin: function getRoleAdmin() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_ADMIN\";\n    },\n    getRolePatient: function getRolePatient() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_USER\";\n    },\n    getRoleDoctor: function getRoleDoctor() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\";\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var currentPatientId, currentAppointments, currentDoctorId, _currentAppointments;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(_this4.$store.state.user.authorities[0].name);\n              if (!(_this4.$store.state.user.authorities[0].name === \"ROLE_USER\")) {\n                _context2.next = 11;\n                break;\n              }\n              _context2.next = 4;\n              return PatientService.getCurrentPatientId(_this4.$store.state.user.id);\n            case 4:\n              currentPatientId = _context2.sent;\n              _this4.$store.commit(\"SET_PATIENT_ID\", parseInt(currentPatientId));\n              console.log(_this4.$store.state.patientId, \" CHECKING PATIENT ID IN THE STORE\");\n              _context2.next = 9;\n              return AppointmentService.getAppointmentByPatientId(_this4.$store.state.patientId);\n            case 9:\n              currentAppointments = _context2.sent;\n              console.log(currentAppointments);\n            case 11:\n              if (!(_this4.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\")) {\n                _context2.next = 21;\n                break;\n              }\n              _context2.next = 14;\n              return DoctorService.getCurrentDoctorId(_this4.$store.state.user.id);\n            case 14:\n              currentDoctorId = _context2.sent;\n              _this4.$store.commit(\"SET_DOCTOR_ID\", parseInt(currentDoctorId));\n              console.log(_this4.$store.state.doctorId, \" CHECKING DOCTOR ID IN THE STORE\");\n              _context2.next = 19;\n              return AppointmentService.getAppointmentByDoctorId(_this4.$store.state.doctorId);\n            case 19:\n              _currentAppointments = _context2.sent;\n              console.log(_currentAppointments);\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;EACA;EACAE;IACAC;MAAA;MACA;QACAC,kEACA;UACA;QACA,EACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,iFACA;kBACA;gBACA,EACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACAC;MAAA;MACA;QACA;QACA;QACA;QACA;QACA;QACAC;QACA;QACA;UACA;QACA,EACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAV,mCACA,4BACA;YAAA;cAFAW;cAGA;cACAD,YACA,+BACA,oCACA;cAAA;cAAA,OACAR;YAAA;cAAAU;cACAF;YAAA;cAAA,MAEA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAN,iCACA,4BACA;YAAA;cAFAS;cAGA;cACAH,YACA,8BACA,mCACA;cAAA;cAAA,OACAR;YAAA;cAAAU;cACAF;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEA;AACA","names":["name","components","DoctorList","PatientList","AdminView","Navbar","watch","getPatientId","handler","immediate","getDoctorId","methods","isPatient","PatientService","setPatientAppointments","AppointmentService","isDoctor","DoctorService","computed","getRoleAdmin","getRolePatient","getRoleDoctor","created","console","currentPatientId","currentAppointments","currentDoctorId"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\n  <v-container>\n    <navbar />\n    <v-layout>\n      <admin-view v-if=\"getRoleAdmin\" />\n      <patient-list v-else-if=\"getRoleDoctor\" />\n      <doctor-list v-else />\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport DoctorList from \"../components/DoctorList.vue\";\nimport PatientList from \"../components/PatientList.vue\";\nimport AdminView from \"../components/AdminView.vue\";\nimport Navbar from \"../components/Navbar.vue\";\nimport PatientService from \"@/services/PatientService\";\nimport DoctorService from \"@/services/DoctorService\";\nimport AppointmentService from \"@/services/AppointmentService\";\nexport default {\n  name: \"home\",\n  components: {\n    DoctorList,\n    PatientList,\n    AdminView,\n    Navbar,\n  },\n  watch: {\n    getPatientId: {\n      handler: \"isPatient\",\n      immediate: true,\n    },\n    getDoctorId: {\n      handler: \"isDoctor\",\n      immediate: true,\n    },\n  },\n  methods: {\n    isPatient() {\n      if (this.$store.state.user.authorities[0].name === \"ROLE_USER\") {\n        PatientService.getPatientByUserId(this.$store.state.user.id).then(\n          (response) => {\n            this.$store.commit(\"SET_PATIENT\", response.data);\n          }\n        );\n        this.setPatientAppointments();\n        // PatientService.getCurrentPatientId(this.$store.state.user.id).then(\n        //     // eslint-disable-next-line no-unused-vars\n        //     (response) => {\n        //         this.$store.commit(\"SET_PATIENT_ID\", this.response));\n        //     }\n        // );\n        // console.log(this.$store.state.patientId + \" it worked!\");\n      }\n    },\n    async setPatientAppointments() {\n      AppointmentService.getAppointmentByPatientId(this.$store.state.patientId).then(\n        (response) => {\n          this.$store.commit(\"SET_CURRENT_APPOINTMENTS\", response.data);\n        }\n      );\n    },\n    isDoctor() {\n      if (this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\") {\n        // DoctorService.getDoctorByUserId(this.$store.state.user.id).then(\n        //     (response) => {\n        //         this.$store.commit(\"SET_DOCTOR\", response.data);\n        //     }\n        // );\n        DoctorService.getCurrentDoctorId(this.$store.state.user.id).then(\n          // eslint-disable-next-line no-unused-vars\n          (response) => {\n            this.$store.commit(\"SET_DOCTOR_ID\", parseInt(this.response));\n          }\n        );\n      }\n    },\n  },\n  computed: {\n    getRoleAdmin() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_ADMIN\";\n    },\n    getRolePatient() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_USER\";\n    },\n    getRoleDoctor() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\";\n    },\n  },\n  async created() {\n    console.log(this.$store.state.user.authorities[0].name);\n    if (this.$store.state.user.authorities[0].name === \"ROLE_USER\") {\n      const currentPatientId = await PatientService.getCurrentPatientId(\n        this.$store.state.user.id\n      );\n      this.$store.commit(\"SET_PATIENT_ID\", parseInt(currentPatientId));\n      console.log(\n        this.$store.state.patientId,\n        \" CHECKING PATIENT ID IN THE STORE\"\n      );\n      const currentAppointments = await AppointmentService.getAppointmentByPatientId(this.$store.state.patientId);\n      console.log(currentAppointments);\n    }\n    if (this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\") {\n      const currentDoctorId = await DoctorService.getCurrentDoctorId(\n        this.$store.state.user.id\n      );\n      this.$store.commit(\"SET_DOCTOR_ID\", parseInt(currentDoctorId));\n      console.log(\n        this.$store.state.doctorId,\n        \" CHECKING DOCTOR ID IN THE STORE\"\n      );\n      const currentAppointments = await AppointmentService.getAppointmentByDoctorId(this.$store.state.doctorId);\n      console.log(currentAppointments);\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}