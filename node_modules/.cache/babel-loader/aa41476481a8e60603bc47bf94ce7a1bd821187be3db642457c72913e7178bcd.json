{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport reviewService from \"@/services/ReviewService\";\nimport Navbar from \"../components/Navbar.vue\";\nexport default {\n  name: \"newReviewForm\",\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      doctorName: \"\",\n      doctorId: null,\n      patientName: \"\",\n      patientId: null,\n      newReview: {\n        patientId: \"\",\n        doctorId: \"\",\n        reviewRating: \"\",\n        reviewTitle: \"\",\n        reviewBody: \"\",\n        reviewDate: \"\"\n      },\n      timeslots: [],\n      valid: false,\n      selected: null,\n      doctors: [],\n      doctorObj: {}\n    };\n  },\n  methods: {\n    clearInput: function clearInput() {\n      this.$refs.reviewForm.reset();\n    },\n    createReview: function createReview() {\n      var _this = this;\n      this.newReview.patientId = this.$store.state.patientId;\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = String(date.getMonth() + 1).padStart(2, \"0\");\n      var day = String(date.getDate()).padStart(2, \"0\");\n      this.newReview.reviewDate = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n      reviewService.createReview(this.newReview).then(function (response) {\n        if (response.status === 201) {\n          _this.$router.push({\n            name: \"reviews\"\n          });\n        }\n      });\n      this.$router.push(\"/\");\n    },\n    // service call here to pull data from doctor based on id this.selected and date selected this.dateSelected\n    // will i need to add a list of dates as well as a dropdown menu?\n    chosenDoctor: function chosenDoctor() {\n      this.newReview.doctorId = this.doctorObj.doctorId;\n      this.newReview.patientId = this.$store.state.patientId;\n      console.log(\"id\", this.doctorObj.doctorId);\n    }\n  },\n  created: function created() {\n    this.newReview.patientId = this.$store.state.patientId;\n  }\n};","map":{"version":3,"mappings":";;;;AAoEA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IAAA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAD;QACAF;QACAI;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EAAA;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,gDACA;QACA;UACA;YAAArB;UAAA;QACA;MACA,EACA;MACA;IACA;IACA;IACA;IACAsB;MACA;MACA;MACAC;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","components","Navbar","data","doctorName","doctorId","patientName","patientId","newReview","reviewRating","reviewTitle","reviewBody","reviewDate","timeslots","valid","selected","doctors","doctorObj","methods","clearInput","createReview","reviewService","chosenDoctor","console","created"],"sourceRoot":"src/components","sources":["CreateReview.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <v-container fill-height fluid>\n    <navbar />\n    <v-col justify=\"center\" fill-height class=\"d-flex justify-center\">\n      <div id=\"newReviewForm\" class=\"text-center\">\n        <v-card>\n          <v-form\n            class=\"px-6 pb-5 pt-6\"\n            ref=\"newReviewForm\"\n            id=\"newReviewForm\"\n            v-model=\"valid\"\n            @submit.prevent=\"createReview\"\n          >\n            <v-img\n              class=\"mx-auto\"\n              src=\"../assets/caduceus-transparent-background-8.png\"\n              max-width=\"50px\"\n              max-height=\"100px\"\n            >\n            </v-img>\n            <h1>Please Enter Review Information</h1>\n            <v-select\n              :items=\"this.$store.state.doctors\"\n              v-model=\"doctorObj\"\n              item-text=\"firstName\"\n              item-value=\"id\"\n              return-object\n              dense\n              outlined\n              hide-details\n              class=\"ma-2 pb-6\"\n              label=\"doctors\"\n              @change=\"chosenDoctor\"\n            ></v-select>\n              <v-text-field\n                  v-model=\"newReview.reviewTitle\"\n                  :rules=\"nameRules\"\n                  :counter=\"50\"\n                  label=\"Name for review\"\n                  prepend-inner-icon=\"mdi-rename\"\n                  required\n              ></v-text-field>\n\n              <v-rating\n                  v-model.number=\"newReview.reviewRating\"\n                  bg-color=\"orange-lighten-1\"\n                  color=\"yellow\"\n              ></v-rating>\n\n            <v-text-field\n              v-model=\"newReview.reviewBody\"\n              :counter=\"100\"\n              label=\"Description\"\n              required\n            >\n            </v-text-field>\n\n            <v-btn type=\"submit\" :disabled=\"!valid\">Create Review</v-btn>\n            <v-btn @click=\"clearInput\"> Clear Fields </v-btn>\n          </v-form>\n        </v-card>\n      </div>\n    </v-col>\n  </v-container>\n</template>\n\n<script>\nimport reviewService from \"@/services/ReviewService\";\nimport Navbar from \"../components/Navbar.vue\";\n\nexport default {\n  name: \"newReviewForm\",\n  components: {\n    Navbar,\n  },\n  data: () => ({\n      doctorName: \"\",\n      doctorId: null,\n      patientName: \"\",\n      patientId: null,\n      newReview: {\n          patientId: \"\",\n          doctorId: \"\",\n          reviewRating: \"\",\n          reviewTitle: \"\",\n          reviewBody: \"\",\n          reviewDate: \"\",\n      },\n    timeslots: [],\n    valid: false,\n    selected: null,\n      doctors: [],\n      doctorObj: {},\n  }),\n  methods: {\n    clearInput() {\n      this.$refs.reviewForm.reset();\n    },\n    createReview() {\n      this.newReview.patientId = this.$store.state.patientId;\n        let date = new Date();\n        let year = date.getFullYear();\n        let month = String(date.getMonth() + 1).padStart(2, \"0\");\n        let day = String(date.getDate()).padStart(2, \"0\");\n        this.newReview.reviewDate = `${year}-${month}-${day}`;\n      reviewService.createReview(this.newReview).then(\n        (response) => {\n          if (response.status === 201) {\n              this.$router.push({ name: \"reviews\" });\n          }\n        }\n      );\n      this.$router.push(\"/\");\n    },\n      // service call here to pull data from doctor based on id this.selected and date selected this.dateSelected\n      // will i need to add a list of dates as well as a dropdown menu?\n    chosenDoctor() {\n      this.newReview.doctorId = this.doctorObj.doctorId;\n        this.newReview.patientId = this.$store.state.patientId;\n        console.log(\"id\", this.doctorObj.doctorId);\n    },\n  },\n  created() {\n    this.newReview.patientId = this.$store.state.patientId;\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}