{"ast":null,"code":"import _objectSpread from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find.js\";\n// Mixins\nimport mixins from '../../util/mixins';\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport { provide as RegistrableProvide } from '../../mixins/registrable';\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */).extend({\n  name: 'v-form',\n  provide: function provide() {\n    return {\n      form: this\n    };\n  },\n  inheritAttrs: false,\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean\n  },\n  data: function data() {\n    return {\n      inputs: [],\n      watchers: [],\n      errorBag: {}\n    };\n  },\n  watch: {\n    errorBag: {\n      handler: function handler(val) {\n        var errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput: function watchInput(input) {\n      var _this = this;\n      var watcher = function watcher(input) {\n        return input.$watch('hasError', function (val) {\n          _this.$set(_this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n      var watchers = {\n        _uid: input._uid,\n        valid: function valid() {},\n        shouldValidate: function shouldValidate() {}\n      };\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', function (val) {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (_this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n      return watchers;\n    },\n    /** @public */validate: function validate() {\n      return this.inputs.filter(function (input) {\n        return !input.validate(true);\n      }).length === 0;\n    },\n    /** @public */reset: function reset() {\n      this.inputs.forEach(function (input) {\n        return input.reset();\n      });\n      this.resetErrorBag();\n    },\n    resetErrorBag: function resetErrorBag() {\n      var _this2 = this;\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(function () {\n          _this2.errorBag = {};\n        }, 0);\n      }\n    },\n    /** @public */resetValidation: function resetValidation() {\n      this.inputs.forEach(function (input) {\n        return input.resetValidation();\n      });\n      this.resetErrorBag();\n    },\n    register: function register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n    unregister: function unregister(input) {\n      var found = this.inputs.find(function (i) {\n        return i._uid === input._uid;\n      });\n      if (!found) return;\n      var unwatch = this.watchers.find(function (i) {\n        return i._uid === found._uid;\n      });\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n      this.watchers = this.watchers.filter(function (i) {\n        return i._uid !== found._uid;\n      });\n      this.inputs = this.inputs.filter(function (i) {\n        return i._uid !== found._uid;\n      });\n      this.$delete(this.errorBag, found._uid);\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: _objectSpread({\n        novalidate: true\n      }, this.attrs$),\n      on: {\n        submit: function submit(e) {\n          return _this3.$emit('submit', e);\n        }\n      }\n    }, this.$slots[\"default\"]);\n  }\n});","map":{"version":3,"names":["mixins","BindsAttrs","provide","RegistrableProvide","extend","name","form","inheritAttrs","props","disabled","Boolean","lazyValidation","readonly","value","data","inputs","watchers","errorBag","watch","handler","val","errors","Object","values","includes","$emit","deep","immediate","methods","watchInput","input","_this","watcher","$watch","$set","_uid","valid","shouldValidate","hasOwnProperty","validate","filter","length","reset","forEach","resetErrorBag","_this2","setTimeout","resetValidation","register","push","unregister","found","find","i","unwatch","$delete","render","h","_this3","staticClass","attrs","_objectSpread","novalidate","attrs$","on","submit","e","$slots"],"sources":["../../../src/components/VForm/VForm.ts"],"sourcesContent":["// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n"],"mappings":";;;;;;;;;;;AAGA;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAO,IAAIC,kBAApB,QAA8C,0BAA9C;AAaA;;AACA,eAAeH,MAAM,CACnBC,UADmB,EAEnBE,kBAAkB,CAAC,MAAD;AAClB,oBAHmB,CAAN,CAIbC,MAJa,CAIN;EACPC,IAAI,EAAE,QADC;EAGPH,OAAO,WAAAA,QAAA;IACL,OAAO;MAAEI,IAAI,EAAE;IAAR,CAAP;EACD,CALM;EAOPC,YAAY,EAAE,KAPP;EASPC,KAAK,EAAE;IACLC,QAAQ,EAAEC,OADL;IAELC,cAAc,EAAED,OAFX;IAGLE,QAAQ,EAAEF,OAHL;IAILG,KAAK,EAAEH;EAJF,CATA;EAgBPI,IAAI,EAAE,SAAAA,KAAA;IAAA,OAAO;MACXC,MAAM,EAAE,EADG;MAEXC,QAAQ,EAAE,EAFC;MAGXC,QAAQ,EAAE;IAHC,CAAP;EAAA,CAhBC;EAsBPC,KAAK,EAAE;IACLD,QAAQ,EAAE;MACRE,OAAO,WAAAA,QAAEC,GAAF,EAAK;QACV,IAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmBI,QAAnB,CAA4B,IAA5B,CAAf;QAEA,KAAKC,KAAL,CAAW,OAAX,EAAoB,CAACJ,MAArB;MACD,CALO;MAMRK,IAAI,EAAE,IANE;MAORC,SAAS,EAAE;IAPH;EADL,CAtBA;EAkCPC,OAAO,EAAE;IACPC,UAAU,WAAAA,WAAEC,KAAF,EAAY;MAAA,IAAAC,KAAA;MACpB,IAAMC,OAAO,GAAI,SAAXA,OAAOA,CAAIF,KAAD,EAA6B;QAC3C,OAAOA,KAAK,CAACG,MAAN,CAAa,UAAb,EAA0B,UAAAb,GAAD,EAAiB;UAC/CW,KAAA,CAAKG,IAAL,CAAUH,KAAA,CAAKd,QAAf,EAAyBa,KAAK,CAACK,IAA/B,EAAqCf,GAArC;QACD,CAFM,EAEJ;UAAEO,SAAS,EAAE;QAAb,CAFI,CAAP;MAGD,CAJD;MAMA,IAAMX,QAAQ,GAAa;QACzBmB,IAAI,EAAEL,KAAK,CAACK,IADa;QAEzBC,KAAK,EAAE,SAAAA,MAAA,EAAK,CAAG,CAFU;QAGzBC,cAAc,EAAE,SAAAA,eAAA,EAAK,CAAG;MAHC,CAA3B;MAMA,IAAI,KAAK1B,cAAT,EAAyB;QACvB;QACAK,QAAQ,CAACqB,cAAT,GAA0BP,KAAK,CAACG,MAAN,CAAa,gBAAb,EAAgC,UAAAb,GAAD,EAAiB;UACxE,IAAI,CAACA,GAAL,EAAU,OAD8D,CAGxE;;UACA,IAAIW,KAAA,CAAKd,QAAL,CAAcqB,cAAd,CAA6BR,KAAK,CAACK,IAAnC,CAAJ,EAA8C;UAE9CnB,QAAQ,CAACoB,KAAT,GAAiBJ,OAAO,CAACF,KAAD,CAAxB;QACD,CAPyB,CAA1B;MAQD,CAVD,MAUO;QACLd,QAAQ,CAACoB,KAAT,GAAiBJ,OAAO,CAACF,KAAD,CAAxB;MACD;MAED,OAAOd,QAAP;IACD,CA7BM;IA8BP,cACAuB,QAAQ,WAAAA,SAAA;MACN,OAAO,KAAKxB,MAAL,CAAYyB,MAAZ,CAAmB,UAAAV,KAAK;QAAA,OAAI,CAACA,KAAK,CAACS,QAAN,CAAe,IAAf,CAA7B;MAAA,GAAmDE,MAAnD,KAA8D,CAArE;IACD,CAjCM;IAkCP,cACAC,KAAK,WAAAA,MAAA;MACH,KAAK3B,MAAL,CAAY4B,OAAZ,CAAoB,UAAAb,KAAK;QAAA,OAAIA,KAAK,CAACY,KAAN,EAA7B;MAAA;MACA,KAAKE,aAAL;IACD,CAtCM;IAuCPA,aAAa,WAAAA,cAAA;MAAA,IAAAC,MAAA;MACX,IAAI,KAAKlC,cAAT,EAAyB;QACvB;QACAmC,UAAU,CAAC,YAAK;UACdD,MAAA,CAAK5B,QAAL,GAAgB,EAAhB;QACD,CAFS,EAEP,CAFO,CAAV;MAGD;IACF,CA9CM;IA+CP,cACA8B,eAAe,WAAAA,gBAAA;MACb,KAAKhC,MAAL,CAAY4B,OAAZ,CAAoB,UAAAb,KAAK;QAAA,OAAIA,KAAK,CAACiB,eAAN,EAA7B;MAAA;MACA,KAAKH,aAAL;IACD,CAnDM;IAoDPI,QAAQ,WAAAA,SAAElB,KAAF,EAAuB;MAC7B,KAAKf,MAAL,CAAYkC,IAAZ,CAAiBnB,KAAjB;MACA,KAAKd,QAAL,CAAciC,IAAd,CAAmB,KAAKpB,UAAL,CAAgBC,KAAhB,CAAnB;IACD,CAvDM;IAwDPoB,UAAU,WAAAA,WAAEpB,KAAF,EAAuB;MAC/B,IAAMqB,KAAK,GAAG,KAAKpC,MAAL,CAAYqC,IAAZ,CAAiB,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAClB,IAAF,KAAWL,KAAK,CAACK,IAAvC;MAAA,EAAd;MAEA,IAAI,CAACgB,KAAL,EAAY;MAEZ,IAAMG,OAAO,GAAG,KAAKtC,QAAL,CAAcoC,IAAd,CAAmB,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAClB,IAAF,KAAWgB,KAAK,CAAChB,IAAzC;MAAA,EAAhB;MACA,IAAImB,OAAJ,EAAa;QACXA,OAAO,CAAClB,KAAR;QACAkB,OAAO,CAACjB,cAAR;MACD;MAED,KAAKrB,QAAL,GAAgB,KAAKA,QAAL,CAAcwB,MAAd,CAAqB,UAAAa,CAAC;QAAA,OAAIA,CAAC,CAAClB,IAAF,KAAWgB,KAAK,CAAChB,IAA3C;MAAA,EAAhB;MACA,KAAKpB,MAAL,GAAc,KAAKA,MAAL,CAAYyB,MAAZ,CAAmB,UAAAa,CAAC;QAAA,OAAIA,CAAC,CAAClB,IAAF,KAAWgB,KAAK,CAAChB,IAAzC;MAAA,EAAd;MACA,KAAKoB,OAAL,CAAa,KAAKtC,QAAlB,EAA4BkC,KAAK,CAAChB,IAAlC;IACD;EAtEM,CAlCF;EA2GPqB,MAAM,WAAAA,OAAEC,CAAF,EAAG;IAAA,IAAAC,MAAA;IACP,OAAOD,CAAC,CAAC,MAAD,EAAS;MACfE,WAAW,EAAE,QADE;MAEfC,KAAK,EAAAC,aAAA;QACHC,UAAU,EAAE;MADP,GAEF,KAAKC,MAAA,CAJK;MAMfC,EAAE,EAAE;QACFC,MAAM,EAAG,SAAAA,OAAAC,CAAD;UAAA,OAAcR,MAAA,CAAKjC,KAAL,CAAW,QAAX,EAAqByC,CAArB;QAAA;MADpB;IANW,CAAT,EASL,KAAKC,MAAL,WATK,CAAR;EAUD;AAtHM,CAJM,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}