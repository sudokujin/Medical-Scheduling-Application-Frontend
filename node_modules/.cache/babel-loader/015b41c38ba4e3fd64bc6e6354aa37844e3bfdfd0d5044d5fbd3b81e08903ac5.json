{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport reviewService from \"../services/ReviewService.js\";\nimport navBar from \"./Navbar.vue\";\nexport default {\n  name: \"reviews\",\n  components: {\n    navBar: navBar\n  },\n  data: function data() {\n    return {\n      doctorName: \"\",\n      doctorId: null,\n      patientName: \"\",\n      patientId: null,\n      title: \"Check their reviews so you can make the best choice for your needs!\",\n      newReview: {\n        patientId: \"\",\n        doctorId: \"\",\n        reviewRating: \"\",\n        reviewTitle: \"\",\n        reviewBody: \"\",\n        reviewDate: \"\"\n      },\n      createReview: false,\n      filter: 0,\n      reviews: [],\n      selectedDoctorId: null,\n      doctors: [],\n      doctorObj: {}\n      //currentDate:\n    };\n  },\n\n  // watch: {\n  //   refreshPage: {\n  //       handler: \"refreshComponent\",\n  //       immediate: true\n  //   }\n  // },\n  methods: {\n    getAllReviews: function getAllReviews() {\n      var _this = this;\n      reviewService.getAllReviews().then(function (response) {\n        // console.log(response.data);\n        _this.reviews = _this.$store.state.reviews;\n        _this.$store.commit(\"SET_REVIEWS\", response.data);\n      });\n    },\n    chosenDoctor: function chosenDoctor() {\n      this.selectedDoctorId = this.doctorObj.doctorId;\n    },\n    addNewReview: function addNewReview() {\n      var _this2 = this;\n      this.newReview.patientId = 1;\n      // eslint-disable-next-line no-undef\n      this.newReview.doctorId = this.selectedDoctorId;\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = String(date.getMonth() + 1).padStart(2, \"0\");\n      var day = String(date.getDate()).padStart(2, \"0\");\n      this.newReview.reviewDate = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n      reviewService.createReview(this.newReview).then(function (response) {\n        if (response.status === 201) {\n          // this.$router.push('/reviews');\n          _this2.getAllReviews();\n        }\n      });\n    },\n    getReviewsByDoctor: function getReviewsByDoctor() {\n      reviewService.getReviewsByDoctorId();\n    },\n    resetForm: function resetForm() {\n      this.newReview = {};\n      this.showForm = false;\n    },\n    numberOfReviews: function numberOfReviews(numOfStars) {\n      var reviewsWithNumStars = this.reviews.filter(function (review) {\n        return review.reviewRating === numOfStars;\n      });\n      return reviewsWithNumStars.length;\n    },\n    getReviewsByDoctorId: function getReviewsByDoctorId(doctorId) {\n      return this.reviews.filter(function (review) {\n        return review.doctorId === doctorId;\n      });\n    },\n    getItem: function getItem() {\n      this.item = \"\";\n      this.$router.push({\n        name: \"createReview\"\n      });\n    }\n  },\n  computed: {\n    averageRating: function averageRating() {\n      var sum = this.reviews.reduce(function (currentSum, review) {\n        return currentSum + review.rating;\n      }, 0);\n      return (sum / this.reviews.length).toFixed(2);\n    },\n    numberOfOneStarReviews: function numberOfOneStarReviews() {\n      return this.numberOfReviews(1);\n    },\n    numberOfTwoStarReviews: function numberOfTwoStarReviews() {\n      return this.numberOfReviews(2);\n    },\n    numberOfThreeStarReviews: function numberOfThreeStarReviews() {\n      return this.numberOfReviews(3);\n    },\n    numberOfFourStarReviews: function numberOfFourStarReviews() {\n      return this.numberOfReviews(4);\n    },\n    numberOfFiveStarReviews: function numberOfFiveStarReviews() {\n      return this.numberOfReviews(5);\n    },\n    filteredReviews: function filteredReviews() {\n      var _this3 = this;\n      // filtered reviews will grab review list, and filter through them based on the doctor id to display each doctors reviews\n      // maybe I need a drop down menu like v-calendar to choose which doctor to see reviews for?? This way I can get the id and compare\n      // to the review id\n      return this.reviews.filter(function (review) {\n        return review.doctorId === _this3.doctorObj.doctorId;\n      });\n    }\n  },\n  created: function created() {\n    this.getAllReviews();\n    this.doctors = this.$store.state.doctors;\n  }\n};","map":{"version":3,"names":["reviewService","navBar","name","components","data","doctorName","doctorId","patientName","patientId","title","newReview","reviewRating","reviewTitle","reviewBody","reviewDate","createReview","filter","reviews","selectedDoctorId","doctors","doctorObj","methods","getAllReviews","_this","then","response","$store","state","commit","chosenDoctor","addNewReview","_this2","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","status","getReviewsByDoctor","getReviewsByDoctorId","resetForm","showForm","numberOfReviews","numOfStars","reviewsWithNumStars","review","length","getItem","item","$router","push","computed","averageRating","sum","reduce","currentSum","rating","toFixed","numberOfOneStarReviews","numberOfTwoStarReviews","numberOfThreeStarReviews","numberOfFourStarReviews","numberOfFiveStarReviews","filteredReviews","_this3","created"],"sources":["src/components/Review.vue"],"sourcesContent":["<template>\n  <v-container>\n    <nav-bar />\n    <div class=\"main\">\n      <h2>Patient Reviews</h2>\n      <p class=\"description\">{{ this.title }}</p>\n\n      <div class=\"well-display\">\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 1\">{{\n            numberOfOneStarReviews\n          }}</span>\n          <v-rating\n            hover\n            length=\"1\"\n            readonly\n            size=\"15\"\n            color=\"yellow\"\n            value=\"1\"\n          ></v-rating>\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 2\">{{\n            numberOfTwoStarReviews\n          }}</span>\n          <v-rating\n            hover\n            length=\"2\"\n            readonly\n            size=\"15\"\n            color=\"yellow\"\n            value=\"2\"\n          ></v-rating>\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 3\">{{\n            numberOfThreeStarReviews\n          }}</span>\n          <v-rating\n            hover\n            length=\"3\"\n            readonly\n            size=\"15\"\n            color=\"yellow\"\n            value=\"3\"\n          ></v-rating>\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 4\">{{\n            numberOfFourStarReviews\n          }}</span>\n          <v-rating\n            hover\n            length=\"4\"\n            readonly\n            size=\"15\"\n            color=\"yellow\"\n            background-color=\"orange lighten-3\"\n            value=\"4\"\n          ></v-rating>\n        </div>\n\n        <div class=\"well\">\n          <span class=\"amount\" v-on:click=\"filter = 5\">{{\n            numberOfFiveStarReviews\n          }}</span>\n          <v-rating\n            length=\"5\"\n            readonly\n            size=\"15\"\n            color=\"yellow\"\n            value=\"5\"\n          ></v-rating>\n        </div>\n      </div>\n\n      <a id=\"show-form-button\" href=\"#\" v-on:click.prevent=\"getItem\"\n        >Write a Review</a\n      >\n      <v-col fill-height class=\"d-flex justify-start\">\n        <v-card>\n          <v-form\n            class=\"px-6 pb-5 pt-6\"\n            v-on:submit.prevent=\"addNewReview\"\n            v-if=\"showForm === true\"\n          >\n            <div class=\"form-element\">\n              <label for=\"reviewer\">Name:</label>\n              <input\n                id=\"reviewer\"\n                type=\"text\"\n                v-model=\"newReview.patientName\"\n              />\n\n              <v-select\n                :items=\"this.$store.state.doctors\"\n                v-model.number=\"newReview.doctorId\"\n                item-text=\"firstName\"\n                item-value=\"id\"\n                return-object\n                dense\n                outlined\n                hide-details\n                class=\"ma-2 pb-6\"\n                label=\"Pick a doctor to review!\"\n                @change=\"chosenDoctor\"\n              ></v-select>\n              <!-- patient name here based on patient id -->\n            </div>\n            <div class=\"form-element\">\n              <label for=\"title\">Title:</label>\n              <input id=\"title\" type=\"text\" v-model=\"newReview.reviewTitle\" />\n              <!-- review title here based on patient id/doc id/review id -->\n            </div>\n            <div class=\"form-element\">\n              <v-rating\n                v-model.number=\"newReview.reviewRating\"\n                bg-color=\"orange-lighten-1\"\n                color=\"yellow\"\n              ></v-rating>\n            </div>\n            <div class=\"form-element\">\n              <label for=\"review\">Review:</label>\n              <textarea id=\"review\" v-model=\"newReview.reviewBody\"></textarea>\n              <!-- review_body based on patient id/doc id/review id -->\n            </div>\n\n            <v-btn type=\"submit\">Submit Review</v-btn>\n            <!-- post to database review table on submit button being clicked -->\n            <v-btn @click=\"resetForm\">Clear Fields</v-btn>\n          </v-form>\n        </v-card>\n      </v-col>\n      <v-select\n        :items=\"this.$store.state.doctors\"\n        v-model=\"doctorObj\"\n        item-text=\"firstName\"\n        item-value=\"doctorId\"\n        return-object\n        dense\n        outlined\n        hide-details\n        class=\"ma-2\"\n        label=\"Choose a doctor to see reviews!\"\n        @change=\"chosenDoctor\"\n      ></v-select>\n\n      <div\n        class=\"review\"\n        v-for=\"review in filteredReviews\"\n        v-bind:key=\"review.id\"\n      >\n        <!-- loop over review objects based on a filtered review list of doctors by id , do not need favorited section line 77-->\n        <h4>{{ review.patientName }}</h4>\n        <!-- patient name here based on patient id -->\n        <v-row>\n          <div class=\"rating\">\n            <v-rating\n              v-model=\"review.reviewRating\"\n              color=\"yellow\"\n              background-color=\"yellow lighten-3\"\n              readonly\n            ></v-rating>\n          </div>\n          <h3>{{ review.reviewTitle }}</h3>\n        </v-row>\n        <p>{{ review.reviewBody }}</p>\n      </div>\n    </div>\n  </v-container>\n</template>\n<script>\nimport reviewService from \"../services/ReviewService.js\";\nimport navBar from \"./Navbar.vue\";\n\nexport default {\n  name: \"reviews\",\n  components: {\n    navBar,\n  },\n  data() {\n    return {\n      doctorName: \"\",\n      doctorId: null,\n      patientName: \"\",\n      patientId: null,\n      title:\n        \"Check their reviews so you can make the best choice for your needs!\",\n      newReview: {\n        patientId: \"\",\n        doctorId: \"\",\n        reviewRating: \"\",\n        reviewTitle: \"\",\n        reviewBody: \"\",\n        reviewDate: \"\",\n      },\n      createReview: false,\n      filter: 0,\n      reviews: [],\n      selectedDoctorId: null,\n      doctors: [],\n      doctorObj: {},\n      //currentDate:\n    };\n  },\n    // watch: {\n    //   refreshPage: {\n    //       handler: \"refreshComponent\",\n    //       immediate: true\n    //   }\n    // },\n  methods: {\n    getAllReviews() {\n      reviewService.getAllReviews().then((response) => {\n        // console.log(response.data);\n        this.reviews = this.$store.state.reviews;\n        this.$store.commit(\"SET_REVIEWS\", response.data);\n      });\n    },\n    chosenDoctor() {\n      this.selectedDoctorId = this.doctorObj.doctorId;\n    },\n    addNewReview() {\n      this.newReview.patientId = 1;\n      // eslint-disable-next-line no-undef\n      this.newReview.doctorId = this.selectedDoctorId;\n      let date = new Date();\n      let year = date.getFullYear();\n      let month = String(date.getMonth() + 1).padStart(2, \"0\");\n      let day = String(date.getDate()).padStart(2, \"0\");\n      this.newReview.reviewDate = `${year}-${month}-${day}`;\n      reviewService.createReview(this.newReview).then((response) => {\n        if (response.status === 201) {\n          // this.$router.push('/reviews');\n          this.getAllReviews();\n        }\n      });\n    },\n    getReviewsByDoctor() {\n      reviewService.getReviewsByDoctorId();\n    },\n    resetForm() {\n      this.newReview = {};\n      this.showForm = false;\n    },\n    numberOfReviews(numOfStars) {\n      const reviewsWithNumStars = this.reviews.filter(\n        (review) => review.reviewRating === numOfStars\n      );\n      return reviewsWithNumStars.length;\n    },\n    getReviewsByDoctorId(doctorId) {\n      return this.reviews.filter((review) => review.doctorId === doctorId);\n    },\n    getItem() {\n      this.item = \"\";\n      this.$router.push({ name: \"createReview\" });\n    },\n  },\n  computed: {\n    averageRating() {\n      let sum = this.reviews.reduce((currentSum, review) => {\n        return currentSum + review.rating;\n      }, 0);\n      return (sum / this.reviews.length).toFixed(2);\n    },\n    numberOfOneStarReviews() {\n      return this.numberOfReviews(1);\n    },\n    numberOfTwoStarReviews() {\n      return this.numberOfReviews(2);\n    },\n    numberOfThreeStarReviews() {\n      return this.numberOfReviews(3);\n    },\n    numberOfFourStarReviews() {\n      return this.numberOfReviews(4);\n    },\n    numberOfFiveStarReviews() {\n      return this.numberOfReviews(5);\n    },\n    filteredReviews() {\n      // filtered reviews will grab review list, and filter through them based on the doctor id to display each doctors reviews\n      // maybe I need a drop down menu like v-calendar to choose which doctor to see reviews for?? This way I can get the id and compare\n      // to the review id\n      return this.reviews.filter(\n        (review) => review.doctorId === this.doctorObj.doctorId\n      );\n    },\n  },\n  created() {\n    this.getAllReviews();\n    this.doctors = this.$store.state.doctors;\n  },\n};\n</script>\n\n<style scoped>\ndiv.main {\n  margin: 1rem 0;\n}\n\ndiv.main div.well-display {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 1rem;\n}\n\ndiv.main div.well-display div.well {\n  display: inline-block;\n  width: 15%;\n  border: 1px black solid;\n  border-radius: 6px;\n  text-align: center;\n  margin: 0.25rem;\n  padding: 0.25rem;\n}\n\ndiv.main div.well-display div.well span.amount {\n  color: darkslategray;\n  display: block;\n  font-size: 2.5rem;\n}\n\ndiv.main div.review {\n  border: 1px black solid;\n  border-radius: 6px;\n  padding: 1rem;\n  margin: 10px;\n}\n\ndiv.main div.review.favorited {\n  background-color: lightyellow;\n}\n\ndiv.main div.review div.rating {\n  height: 2rem;\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0.5rem;\n}\n\ndiv.main div.review div.rating img {\n  height: 100%;\n}\n\ndiv.main div.review p {\n  margin: 20px;\n}\n\ndiv.main div.review h3 {\n  display: inline-block;\n}\n\ndiv.main div.review h4 {\n  font-size: 1rem;\n}\n\ndiv.form-element {\n  margin-top: 10px;\n}\ndiv.form-element > label {\n  display: block;\n}\ndiv.form-element > input,\ndiv.form-element > select {\n  height: 30px;\n  width: 300px;\n}\ndiv.form-element > textarea {\n  height: 60px;\n  width: 300px;\n}\nform > input[type=\"button\"] {\n  width: 100px;\n}\nform > input[type=\"submit\"] {\n  width: 100px;\n  margin-right: 10px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}