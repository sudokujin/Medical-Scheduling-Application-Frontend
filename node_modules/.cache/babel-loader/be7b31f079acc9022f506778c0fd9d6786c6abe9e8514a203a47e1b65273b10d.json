{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport createPersistedState from \"vuex-persistedstate\";\nVue.use(Vuex);\n\n/*\n * The authorization header is set for axios when you login but what happens when you come back or\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\n * exists you should set the header so that it will be attached to each request\n */\nvar currentToken = localStorage.getItem('token');\nvar currentUser = JSON.parse(localStorage.getItem('user'));\nif (currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(currentToken);\n}\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {},\n    doctors: [],\n    patients: [],\n    timeSlots: [],\n    currentPatient: {},\n    appointments: [],\n    reviews: [],\n    doctorToUpdate: {},\n    timeSlotByDoctor: [],\n    patientId: 0,\n    doctorId: 0,\n    currentAppointments: [] || ''\n  },\n  mutations: {\n    SET_AUTH_TOKEN: function SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    LOGOUT: function LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    },\n    SET_DOCTORS: function SET_DOCTORS(state, data) {\n      state.doctors = data;\n    },\n    SET_PATIENTS: function SET_PATIENTS(state, data) {\n      state.patients = data;\n    },\n    SET_TIMESLOTS: function SET_TIMESLOTS(state, data) {\n      state.timeSlots = data;\n    },\n    SET_PATIENT: function SET_PATIENT(state, data) {\n      state.currentPatient = data;\n    },\n    SET_APPOINTMENTS: function SET_APPOINTMENTS(state, data) {\n      state.appointments = data;\n    },\n    SET_REVIEWS: function SET_REVIEWS(state, data) {\n      state.reviews = data;\n    },\n    SET_DOCTORTOUPDATE: function SET_DOCTORTOUPDATE(state, data) {\n      state.doctorToUpdate = data;\n    },\n    SET_TIMESLOTBYDOC: function SET_TIMESLOTBYDOC(state, data) {\n      state.timeSlotByDoctor = data;\n    },\n    SET_PATIENT_ID: function SET_PATIENT_ID(state, data) {\n      state.patientId = data;\n    },\n    SET_DOCTOR_ID: function SET_DOCTOR_ID(state, data) {\n      state.doctorId = data;\n    },\n    SET_CURRENT_APPOINTMENTS: function SET_CURRENT_APPOINTMENTS(state, data) {\n      state.currentAppointments = data;\n    }\n  },\n  getters: {\n    getDoctors: function getDoctors(state) {\n      return state.doctors;\n    },\n    getPatients: function getPatients(state) {\n      return state.patients;\n    },\n    getTimeSlots: function getTimeSlots(state) {\n      return state.timeSlots;\n    },\n    getAppointment: function getAppointment(state) {\n      return state.currentAppointments;\n    },\n    currentPatientAppointment: function currentPatientAppointment(state) {\n      return state.appointments.filter(function (appointment) {\n        return appointment.patientId === state.patientId;\n      });\n    },\n    getDoctorId: function getDoctorId(state) {\n      return state.doctorId;\n    }\n  },\n  plugins: [createPersistedState()]\n});","map":{"version":3,"names":["Vue","Vuex","axios","createPersistedState","use","currentToken","localStorage","getItem","currentUser","JSON","parse","defaults","headers","common","concat","Store","state","token","user","doctors","patients","timeSlots","currentPatient","appointments","reviews","doctorToUpdate","timeSlotByDoctor","patientId","doctorId","currentAppointments","mutations","SET_AUTH_TOKEN","setItem","SET_USER","stringify","LOGOUT","removeItem","SET_DOCTORS","data","SET_PATIENTS","SET_TIMESLOTS","SET_PATIENT","SET_APPOINTMENTS","SET_REVIEWS","SET_DOCTORTOUPDATE","SET_TIMESLOTBYDOC","SET_PATIENT_ID","SET_DOCTOR_ID","SET_CURRENT_APPOINTMENTS","getters","getDoctors","getPatients","getTimeSlots","getAppointment","currentPatientAppointment","filter","appointment","getDoctorId","plugins"],"sources":["/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport createPersistedState from \"vuex-persistedstate\";\n\nVue.use(Vuex)\n\n/*\n * The authorization header is set for axios when you login but what happens when you come back or\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\n * exists you should set the header so that it will be attached to each request\n */\nconst currentToken = localStorage.getItem('token')\nconst currentUser = JSON.parse(localStorage.getItem('user'));\n\nif(currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${currentToken}`;\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {},\n    doctors: [],\n    patients: [],\n    timeSlots:[],\n    currentPatient: {},\n    appointments: [],\n    reviews: [],\n    doctorToUpdate: {},\n    timeSlotByDoctor: [],\n    patientId: 0,\n    doctorId: 0,\n    currentAppointments: [] || '',\n  },\n  mutations: {\n    SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    },\n    SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user',JSON.stringify(user));\n    },\n    LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    },\n    SET_DOCTORS(state, data) {\n      state.doctors = data;\n    },\n    SET_PATIENTS(state, data) {\n      state.patients = data;\n    },\n    SET_TIMESLOTS(state, data) {\n      state.timeSlots = data;\n    },\n    SET_PATIENT(state, data) {\n      state.currentPatient = data;\n    },\n    SET_APPOINTMENTS(state, data) {\n      state.appointments = data;\n    },\n    SET_REVIEWS(state, data) {\n      state.reviews = data;\n    },\n    SET_DOCTORTOUPDATE(state, data) {\n      state.doctorToUpdate = data;\n    },\n    SET_TIMESLOTBYDOC(state, data) {\n      state.timeSlotByDoctor = data;\n    },\n    SET_PATIENT_ID(state, data) {\n      state.patientId = data;\n    },\n    SET_DOCTOR_ID(state, data) {\n      state.doctorId = data;\n    },\n    SET_CURRENT_APPOINTMENTS(state, data) {\n      state.currentAppointments = data;\n    },\n  },\n  getters: {\n      getDoctors: state => {\n        return state.doctors;\n      },\n    getPatients: state => {\n      return state.patients;\n    },\n    getTimeSlots: state => {\n      return state.timeSlots;\n    },\n    getAppointment: state => {\n      return state.currentAppointments;\n    },\n    currentPatientAppointment: state => {\n        return state.appointments.filter(appointment => appointment.patientId === state.patientId);\n    },\n    getDoctorId: state => {\n      return state.doctorId;\n    }\n  },\n  plugins: [createPersistedState()],\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}