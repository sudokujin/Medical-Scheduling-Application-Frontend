{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport DoctorList from \"../components/DoctorList.vue\";\nimport PatientList from \"../components/PatientList.vue\";\nimport AdminView from \"../components/AdminView.vue\";\nimport Navbar from \"../components/Navbar.vue\";\nimport PatientService from \"@/services/PatientService\";\nimport DoctorService from \"@/services/DoctorService\";\nimport AppointmentService from \"@/services/AppointmentService\";\nexport default {\n  name: \"home\",\n  components: {\n    DoctorList: DoctorList,\n    PatientList: PatientList,\n    AdminView: AdminView,\n    Navbar: Navbar\n  },\n  watch: {\n    getPatientId: {\n      handler: \"isPatient\",\n      immediate: true\n    },\n    getDoctorId: {\n      handler: \"isDoctor\",\n      immediate: true\n    }\n  },\n  methods: {\n    isPatient: function isPatient() {\n      var _this = this;\n      if (this.$store.state.user.authorities[0].name === \"ROLE_USER\") {\n        PatientService.getPatientByUserId(this.$store.state.user.id).then(function (response) {\n          _this.$store.commit(\"SET_PATIENT\", response.data);\n        });\n        this.setPatientAppointments();\n        // PatientService.getCurrentPatientId(this.$store.state.user.id).then(\n        //     // eslint-disable-next-line no-unused-vars\n        //     (response) => {\n        //         this.$store.commit(\"SET_PATIENT_ID\", this.response));\n        //     }\n        // );\n        // console.log(this.$store.state.patientId + \" it worked!\");\n      }\n    },\n    setPatientAppointments: function setPatientAppointments() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              AppointmentService.getAppointmentByPatientId(_this2.$store.state.patientId).then(function (response) {\n                _this2.$store.commit(\"SET_CURRENT_APPOINTMENTS\", response.data);\n              });\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    isDoctor: function isDoctor() {\n      var _this3 = this;\n      if (this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\") {\n        // DoctorService.getDoctorByUserId(this.$store.state.user.id).then(\n        //     (response) => {\n        //         this.$store.commit(\"SET_DOCTOR\", response.data);\n        //     }\n        // );\n        DoctorService.getCurrentDoctorId(this.$store.state.user.id).then(\n        // eslint-disable-next-line no-unused-vars\n        function (response) {\n          _this3.$store.commit(\"SET_DOCTOR_ID\", parseInt(_this3.response));\n        });\n        this.setDoctorAppointments();\n      }\n    },\n    setDoctorAppointments: function setDoctorAppointments() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              AppointmentService.getAppointmentsTodayAndLaterForDoctor(_this4.$store.state.doctorId).then(function (response) {\n                _this4.$store.commit(\"SET_CURRENT_APPOINTMENTS\", response.data);\n              });\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  computed: {\n    getRoleAdmin: function getRoleAdmin() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_ADMIN\";\n    },\n    getRolePatient: function getRolePatient() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_USER\";\n    },\n    getRoleDoctor: function getRoleDoctor() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\";\n    }\n  },\n  created: function created() {\n    var _this5 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var currentPatientId, currentDoctorId;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(_this5.$store.state.user.authorities[0].name === \"ROLE_USER\")) {\n              _context3.next = 5;\n              break;\n            }\n            _context3.next = 3;\n            return PatientService.getCurrentPatientId(_this5.$store.state.user.id);\n          case 3:\n            currentPatientId = _context3.sent;\n            _this5.$store.commit(\"SET_PATIENT_ID\", parseInt(currentPatientId));\n            // console.log(\n            //   this.$store.state.patientId,\n            //   \" CHECKING PATIENT ID IN THE STORE\"\n            // );\n          case 5:\n            if (!(_this5.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\")) {\n              _context3.next = 10;\n              break;\n            }\n            _context3.next = 8;\n            return DoctorService.getCurrentDoctorId(_this5.$store.state.user.id);\n          case 8:\n            currentDoctorId = _context3.sent;\n            _this5.$store.commit(\"SET_DOCTOR_ID\", parseInt(currentDoctorId));\n            // console.log(\n            //   this.$store.state.doctorId,\n            //   \" CHECKING DOCTOR ID IN THE STORE\"\n            // );\n            // const currentAppointments = await AppointmentService.getAppointmentByDoctorId(this.$store.state.doctorId);\n            // console.log(currentAppointments);\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n};","map":{"version":3,"names":["DoctorList","PatientList","AdminView","Navbar","PatientService","DoctorService","AppointmentService","name","components","watch","getPatientId","handler","immediate","getDoctorId","methods","isPatient","_this","$store","state","user","authorities","getPatientByUserId","id","then","response","commit","data","setPatientAppointments","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getAppointmentByPatientId","patientId","stop","isDoctor","_this3","getCurrentDoctorId","parseInt","setDoctorAppointments","_this4","_callee2","_callee2$","_context2","getAppointmentsTodayAndLaterForDoctor","doctorId","computed","getRoleAdmin","getRolePatient","getRoleDoctor","created","_this5","_callee3","currentPatientId","currentDoctorId","_callee3$","_context3","getCurrentPatientId","sent"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <v-container>\n    <navbar />\n    <v-layout>\n      <admin-view v-if=\"getRoleAdmin\" />\n      <patient-list v-else-if=\"getRoleDoctor\" />\n      <doctor-list v-else />\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport DoctorList from \"../components/DoctorList.vue\";\nimport PatientList from \"../components/PatientList.vue\";\nimport AdminView from \"../components/AdminView.vue\";\nimport Navbar from \"../components/Navbar.vue\";\nimport PatientService from \"@/services/PatientService\";\nimport DoctorService from \"@/services/DoctorService\";\nimport AppointmentService from \"@/services/AppointmentService\";\nexport default {\n  name: \"home\",\n  components: {\n    DoctorList,\n    PatientList,\n    AdminView,\n    Navbar,\n  },\n  watch: {\n    getPatientId: {\n      handler: \"isPatient\",\n      immediate: true,\n    },\n    getDoctorId: {\n      handler: \"isDoctor\",\n      immediate: true,\n    },\n  },\n  methods: {\n    isPatient() {\n      if (this.$store.state.user.authorities[0].name === \"ROLE_USER\") {\n        PatientService.getPatientByUserId(this.$store.state.user.id).then(\n          (response) => {\n            this.$store.commit(\"SET_PATIENT\", response.data);\n          }\n        );\n        this.setPatientAppointments();\n        // PatientService.getCurrentPatientId(this.$store.state.user.id).then(\n        //     // eslint-disable-next-line no-unused-vars\n        //     (response) => {\n        //         this.$store.commit(\"SET_PATIENT_ID\", this.response));\n        //     }\n        // );\n        // console.log(this.$store.state.patientId + \" it worked!\");\n      }\n    },\n    async setPatientAppointments() {\n      AppointmentService.getAppointmentByPatientId(this.$store.state.patientId).then(\n        (response) => {\n          this.$store.commit(\"SET_CURRENT_APPOINTMENTS\", response.data);\n        }\n      );\n    },\n    isDoctor() {\n      if (this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\") {\n        // DoctorService.getDoctorByUserId(this.$store.state.user.id).then(\n        //     (response) => {\n        //         this.$store.commit(\"SET_DOCTOR\", response.data);\n        //     }\n        // );\n        DoctorService.getCurrentDoctorId(this.$store.state.user.id).then(\n          // eslint-disable-next-line no-unused-vars\n          (response) => {\n            this.$store.commit(\"SET_DOCTOR_ID\", parseInt(this.response));\n          }\n        );\n        this.setDoctorAppointments();\n      }\n    },\n    async setDoctorAppointments() {\n      AppointmentService.getAppointmentsTodayAndLaterForDoctor(this.$store.state.doctorId).then(\n        (response) => {\n          this.$store.commit(\"SET_CURRENT_APPOINTMENTS\", response.data);\n        }\n      );\n    },\n  },\n  computed: {\n    getRoleAdmin() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_ADMIN\";\n    },\n    getRolePatient() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_USER\";\n    },\n    getRoleDoctor() {\n      return this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\";\n    },\n  },\n  async created() {\n    // console.log(this.$store.state.user.authorities[0].name);\n    if (this.$store.state.user.authorities[0].name === \"ROLE_USER\") {\n      const currentPatientId = await PatientService.getCurrentPatientId(\n        this.$store.state.user.id\n      );\n      this.$store.commit(\"SET_PATIENT_ID\", parseInt(currentPatientId));\n      // console.log(\n      //   this.$store.state.patientId,\n      //   \" CHECKING PATIENT ID IN THE STORE\"\n      // );\n    }\n    if (this.$store.state.user.authorities[0].name === \"ROLE_DOCTOR\") {\n      const currentDoctorId = await DoctorService.getCurrentDoctorId(\n        this.$store.state.user.id\n      );\n      this.$store.commit(\"SET_DOCTOR_ID\", parseInt(currentDoctorId));\n      // console.log(\n      //   this.$store.state.doctorId,\n      //   \" CHECKING DOCTOR ID IN THE STORE\"\n      // );\n      // const currentAppointments = await AppointmentService.getAppointmentByDoctorId(this.$store.state.doctorId);\n      // console.log(currentAppointments);\n    }\n  },\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}