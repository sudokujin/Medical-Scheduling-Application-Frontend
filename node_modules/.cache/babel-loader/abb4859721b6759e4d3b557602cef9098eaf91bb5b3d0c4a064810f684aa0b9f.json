{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\n\n/* eslint-disable */\nvar userId = 5;\nvar http = axios.create({\n  baseURL: \"https://medical-scheduling-application.herokuapp.com/\"\n});\nexport default {\n  getPatientList: function getPatientList() {\n    return http.get('/patients');\n  },\n  getPatientByUserId: function getPatientByUserId(id) {\n    return http.get(\"/patients/user/\".concat(id));\n  },\n  update: function update(id, patient) {\n    return http.put(\"/patients/\".concat(id), patient);\n  },\n  \"delete\": function _delete(id) {\n    return http[\"delete\"](\"/patients/\".concat(id));\n  },\n  create: function create(patient) {\n    return http.post(\"/patients\", patient);\n  },\n  getMaxId: function getMaxId() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var config, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                'Accept': 'application/json'\n              }\n            };\n            _context.next = 3;\n            return http.get('/patients/maxId', config);\n          case 3:\n            response = _context.sent;\n            _this.response = JSON.parse(response.data.userId);\n            // console.log(this.response);\n            return _context.abrupt(\"return\", _this.response);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  getUserName: function getUserName() {\n    return http.get(\"/patients/currentUserName\");\n  },\n  getCurrentPatientId: function getCurrentPatientId(userId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var config, response, patientId;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            config = {\n              headers: {\n                'Accept': 'application/json'\n              }\n            };\n            _context2.next = 3;\n            return http.get(\"/patients/getPatientId/\".concat(userId), config);\n          case 3:\n            response = _context2.sent;\n            patientId = JSON.parse(response.data.patientId);\n            console.log(patientId);\n            return _context2.abrupt(\"return\", patientId);\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["axios","userId","http","create","baseURL","getPatientList","get","getPatientByUserId","id","concat","update","patient","put","_delete","post","getMaxId","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_callee$","_context","prev","next","headers","sent","JSON","parse","data","abrupt","stop","getUserName","getCurrentPatientId","_callee2","patientId","_callee2$","_context2","console","log"],"sources":["/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/src/services/PatientService.js"],"sourcesContent":["import axios from 'axios';\n\n/* eslint-disable */\nvar userId = 5;\n\nconst http = axios.create({\n    baseURL: \"https://medical-scheduling-application.herokuapp.com/\"\n});\n\nexport default {\n    getPatientList() {\n        return http.get('/patients');\n    },\n    getPatientByUserId(id) {\n        return http.get(`/patients/user/${id}`)\n    },\n    update(id, patient) {\n        return http.put(`/patients/${id}`, patient);\n    },\n\n    delete(id) {\n        return http.delete(`/patients/${id}`);\n    },\n\n    create(patient) {\n        return http.post(`/patients`, patient);\n    },\n    async getMaxId() {\n        let config = {\n            headers: {\n                'Accept': 'application/json'\n            }\n        }\n        const response = await http.get('/patients/maxId', config)\n        this.response = JSON.parse(response.data.userId);\n       // console.log(this.response);\n        return this.response\n    },\n    getUserName() {\n        return http.get(`/patients/currentUserName`);\n    },\n     async getCurrentPatientId(userId) {\n        let config = {\n            headers: {\n                'Accept' : 'application/json'\n            }\n        }\n        const response = await http.get(`/patients/getPatientId/${userId}`, config);\n        let patientId = JSON.parse(response.data.patientId);\n        console.log(patientId);\n        return patientId;\n    }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,IAAIC,MAAM,GAAG,CAAC;AAEd,IAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,eAAe;EACXC,cAAc,WAAAA,eAAA,EAAG;IACb,OAAOH,IAAI,CAACI,GAAG,CAAC,WAAW,CAAC;EAChC,CAAC;EACDC,kBAAkB,WAAAA,mBAACC,EAAE,EAAE;IACnB,OAAON,IAAI,CAACI,GAAG,mBAAAG,MAAA,CAAmBD,EAAE,CAAE,CAAC;EAC3C,CAAC;EACDE,MAAM,WAAAA,OAACF,EAAE,EAAEG,OAAO,EAAE;IAChB,OAAOT,IAAI,CAACU,GAAG,cAAAH,MAAA,CAAcD,EAAE,GAAIG,OAAO,CAAC;EAC/C,CAAC;EAAA,mBAAAE,QAEML,EAAE,EAAE;IACP,OAAON,IAAI,UAAO,cAAAO,MAAA,CAAcD,EAAE,CAAE,CAAC;EACzC,CAAC;EAEDL,MAAM,WAAAA,OAACQ,OAAO,EAAE;IACZ,OAAOT,IAAI,CAACY,IAAI,cAAcH,OAAO,CAAC;EAC1C,CAAC;EACKI,QAAQ,WAAAA,SAAA,EAAG;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,MAAA,EAAAC,QAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACTN,MAAM,GAAG;cACTO,OAAO,EAAE;gBACL,QAAQ,EAAE;cACd;YACJ,CAAC;YAAAH,QAAA,CAAAE,IAAA;YAAA,OACsBzB,IAAI,CAACI,GAAG,CAAC,iBAAiB,EAAEe,MAAM,CAAC;UAAA;YAApDC,QAAQ,GAAAG,QAAA,CAAAI,IAAA;YACdb,KAAI,CAACM,QAAQ,GAAGQ,IAAI,CAACC,KAAK,CAACT,QAAQ,CAACU,IAAI,CAAC/B,MAAM,CAAC;YACjD;YAAA,OAAAwB,QAAA,CAAAQ,MAAA,WACQjB,KAAI,CAACM,QAAQ;UAAA;UAAA;YAAA,OAAAG,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAd,OAAA;IAAA;EACxB,CAAC;EACDe,WAAW,WAAAA,YAAA,EAAG;IACV,OAAOjC,IAAI,CAACI,GAAG,4BAA4B,CAAC;EAChD,CAAC;EACM8B,mBAAmB,WAAAA,oBAACnC,MAAM,EAAE;IAAA,OAAAgB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAkB,SAAA;MAAA,IAAAhB,MAAA,EAAAC,QAAA,EAAAgB,SAAA;MAAA,OAAApB,mBAAA,GAAAK,IAAA,UAAAgB,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;UAAA;YAC3BN,MAAM,GAAG;cACTO,OAAO,EAAE;gBACL,QAAQ,EAAG;cACf;YACJ,CAAC;YAAAY,SAAA,CAAAb,IAAA;YAAA,OACsBzB,IAAI,CAACI,GAAG,2BAAAG,MAAA,CAA2BR,MAAM,GAAIoB,MAAM,CAAC;UAAA;YAArEC,QAAQ,GAAAkB,SAAA,CAAAX,IAAA;YACVS,SAAS,GAAGR,IAAI,CAACC,KAAK,CAACT,QAAQ,CAACU,IAAI,CAACM,SAAS,CAAC;YACnDG,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;YAAC,OAAAE,SAAA,CAAAP,MAAA,WAChBK,SAAS;UAAA;UAAA;YAAA,OAAAE,SAAA,CAAAN,IAAA;QAAA;MAAA,GAAAG,QAAA;IAAA;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}