{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport AppointmentService from \"../services/AppointmentService\";\nimport Navbar from \"../components/Navbar.vue\";\nimport DoctorTimeService from \"../services/DoctorTimeService\";\nexport default {\n  name: \"AppointmentForm\",\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      appointment: {\n        patientId: 0,\n        doctorId: null,\n        appointmentDuration: 30,\n        description: \"\",\n        appointmentDate: \"\",\n        appointmentTime: \"\"\n      },\n      timeslots: [],\n      valid: false,\n      selected: null,\n      dateSelected: null,\n      dateRules: [function (value) {\n        if (value) return true;\n        return \"Date is required.\";\n      },\n      // eslint-disable-next-line\n      /* eslint-disable */\n      function (value) {\n        if (/^\\d{4}[\\-\\/\\s]?((((0[13578])|(1[02]))[\\-\\/\\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\\-\\/\\s]?(([0-2][0-9])|(30)))|(02[\\-\\/\\s]?[0-2][0-9]))$/.test(value)) return true;\n        return \"Date must be in the format YYYY-MM-DD.\";\n      }],\n      timeRules: [function (value) {\n        if (value) return true;\n        return \"Time is required.\";\n      }, function (value) {\n        if (/(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])/.test(value)) return true;\n        return \"Time must be in the format 00:00:00.\";\n      }]\n    };\n  },\n  methods: {\n    clearInput: function clearInput() {\n      this.$refs.appointmentForm.reset();\n    },\n    createAppointment: function createAppointment() {\n      var _this = this;\n      this.appointment.patientId = this.$store.state.patientId;\n      AppointmentService.createAppointment(this.appointment).then(function (response) {\n        if (response.status === 201) {\n          //   this.getTimeslots();\n          _this.$router.go(\"/\");\n        }\n      });\n      //this.$router.push(\"/\");\n    },\n    getTimeSlotByIdAndDate: function getTimeSlotByIdAndDate(id, date) {\n      var _this2 = this;\n      AppointmentService.getTimeArray(id, date).then(function (response) {\n        _this2.timeSlots = response.data;\n      });\n      // service call here to pull data from doctor based on id this.selected and date selected this.dateSelected\n      // will i need to add a list of dates as well as a dropdown menu?\n    },\n    chosenDoctor: function chosenDoctor() {\n      var _this3 = this;\n      this.appointment.doctorId = this.doctorObj.doctorId;\n      console.log(\"id\", this.doctorObj.doctorId);\n      DoctorTimeService.getTimeArray(this.appointment.doctorId, this.appointment.appointmentDate).then(function (response) {\n        _this3.timeslots = response.data;\n      });\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n    this.appointment.patientId = this.$store.state.currentPatient.patientId;\n    AppointmentService.getTimeArray(this.appointment.doctorId, this.appointment.appointmentDate).then(function (response) {\n      _this4.timeSlots = response.data;\n    });\n  }\n};","map":{"version":3,"mappings":";;AA2EA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IAAA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC,YACA;QACA;QACA;MACA;MACA;MACA;MACA;QACA,IACA,qJACAC,MACA,EAEA;QACA;MACA,EACA;MACAC,YACA;QACA;QACA;MACA,GACA;QACA,uEACA;QACA;MACA;IAEA;EAAA;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACA;MACAC,4DACA;QACA;UACA;UACA;QACA;MACA,EACA;MACA;IACA;IACAC;MAAA;MACAD;QACA;MACA;MACA;MACA;IACA;IACAE;MAAA;MACA;MACAC;MACAC,+BACA,2BACA,iCACA;QACA;MACA;IACA;EACA;EACAC;IAAA;IACA;IACAL,gCACA,2BACA,iCACA;MACA;IACA;EACA;AACA","names":["name","components","Navbar","data","appointment","patientId","doctorId","appointmentDuration","description","appointmentDate","appointmentTime","timeslots","valid","selected","dateSelected","dateRules","value","timeRules","methods","clearInput","createAppointment","AppointmentService","getTimeSlotByIdAndDate","chosenDoctor","console","DoctorTimeService","created"],"sourceRoot":"src/components","sources":["AppointmentForm.vue"],"sourcesContent":["-- /* eslint-disable */\n<template>\n  <v-container fill-height fluid>\n    <navbar />\n    <v-col\n      align=\"center\"\n      justify=\"center\"\n      fill-height\n      class=\"d-flex justify-center\"\n    >\n      <div id=\"appointment\" class=\"text-center\">\n        <v-card>\n          <v-form\n            class=\"px-6 pb-5 pt-6\"\n            ref=\"appointmentForm\"\n            id=\"appointmentForm\"\n            v-model=\"valid\"\n            @submit.prevent=\"createAppointment\"\n          >\n            <v-img\n              class=\"mx-auto\"\n              src=\"../assets/caduceus-transparent-background-8.png\"\n              max-width=\"50px\"\n              max-height=\"100px\"\n            >\n            </v-img>\n            <h1>Please Enter Appointment Information</h1>\n            <v-text-field\n              v-model=\"appointment.appointmentDate\"\n              :counter=\"100\"\n              label=\"Appointment Date\"\n              prepend-inner-icon=\"mdi-cake\"\n              required\n            ></v-text-field>\n            <v-select\n              :items=\"this.$store.state.doctors\"\n              v-model=\"doctorObj\"\n              item-text=\"firstName\"\n              item-value=\"id\"\n              return-object\n              dense\n              outlined\n              hide-details\n              class=\"ma-2 pb-6\"\n              label=\"doctors\"\n              @change=\"chosenDoctor\"\n            ></v-select>\n            <v-select\n              :items=\"timeslots\"\n              v-model=\"appointment.appointmentTime\"\n              item-text=\"\"\n              item-value=\"id\"\n              return-object\n              dense\n              outlined\n              hide-details\n              class=\"ma-2 pb-6\"\n              label=\"timeslots\"\n            ></v-select>\n            <v-text-field\n              v-model=\"appointment.description\"\n              :counter=\"100\"\n              label=\"Description\"\n              required\n            >\n            </v-text-field>\n            <v-btn type=\"submit\" :disabled=\"!valid\">Create Appointment</v-btn>\n            <v-btn @click=\"clearInput\"> Clear Fields </v-btn>\n          </v-form>\n        </v-card>\n      </div>\n    </v-col>\n  </v-container>\n</template>\n<script>\nimport AppointmentService from \"../services/AppointmentService\";\nimport Navbar from \"../components/Navbar.vue\";\nimport DoctorTimeService from \"../services/DoctorTimeService\";\nexport default {\n  name: \"AppointmentForm\",\n  components: {\n    Navbar,\n  },\n  data: () => ({\n    appointment: {\n      patientId: 0,\n      doctorId: null,\n      appointmentDuration: 30,\n      description: \"\",\n      appointmentDate: \"\",\n      appointmentTime: \"\",\n    },\n    timeslots: [],\n    valid: false,\n    selected: null,\n    dateSelected: null,\n    dateRules: [\n      (value) => {\n        if (value) return true;\n        return \"Date is required.\";\n      },\n      // eslint-disable-next-line\n      /* eslint-disable */\n      (value) => {\n        if (\n          /^\\d{4}[\\-\\/\\s]?((((0[13578])|(1[02]))[\\-\\/\\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\\-\\/\\s]?(([0-2][0-9])|(30)))|(02[\\-\\/\\s]?[0-2][0-9]))$/.test(\n            value\n          )\n        )\n          return true;\n        return \"Date must be in the format YYYY-MM-DD.\";\n      },\n    ],\n    timeRules: [\n      (value) => {\n        if (value) return true;\n        return \"Time is required.\";\n      },\n      (value) => {\n        if (/(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])/.test(value))\n          return true;\n        return \"Time must be in the format 00:00:00.\";\n      },\n    ],\n  }),\n  methods: {\n    clearInput() {\n      this.$refs.appointmentForm.reset();\n    },\n    createAppointment() {\n      this.appointment.patientId = this.$store.state.patientId;\n      AppointmentService.createAppointment(this.appointment).then(\n        (response) => {\n          if (response.status === 201) {\n         //   this.getTimeslots();\n            this.$router.go(\"/\");\n          }\n        }\n      );\n      //this.$router.push(\"/\");\n    },\n    getTimeSlotByIdAndDate(id, date) {\n      AppointmentService.getTimeArray(id, date).then((response) => {\n        this.timeSlots = response.data;\n      });\n      // service call here to pull data from doctor based on id this.selected and date selected this.dateSelected\n      // will i need to add a list of dates as well as a dropdown menu?\n    },\n    chosenDoctor() {\n      this.appointment.doctorId = this.doctorObj.doctorId;\n      console.log(\"id\", this.doctorObj.doctorId);\n      DoctorTimeService.getTimeArray(\n        this.appointment.doctorId,\n        this.appointment.appointmentDate\n      ).then((response) => {\n        this.timeslots = response.data;\n      });\n    },\n  },\n  created() {\n    this.appointment.patientId = this.$store.state.currentPatient.patientId;\n    AppointmentService.getTimeArray(\n      this.appointment.doctorId,\n      this.appointment.appointmentDate\n    ).then((response) => {\n      this.timeSlots = response.data;\n    });\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}