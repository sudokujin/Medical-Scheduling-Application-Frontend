{"ast":null,"code":"import _slicedToArray from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectWithoutProperties from \"/Users/kwon/Desktop/repo/Medical-Scheduling-Application-Frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"anchor\"],\n  _excluded2 = [\"anchor\"];\nimport \"core-js/modules/es.string.anchor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport { keys } from '../../util/helpers';\nimport { colorToInt, intToHex, colorToHex } from '../../util/colorUtils';\nimport * as sRGB from '../../util/color/transformSRGB';\nimport * as LAB from '../../util/color/transformCIELAB';\nexport function parse(theme) {\n  var isItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var variations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var anchor = theme.anchor,\n    variant = _objectWithoutProperties(theme, _excluded);\n  var colors = Object.keys(variant);\n  var parsedTheme = {};\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    if (value == null) continue;\n    if (!variations) {\n      parsedTheme[name] = {\n        base: intToHex(colorToInt(value))\n      };\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value);\n      }\n    } else if (_typeof(value) === 'object') {\n      parsedTheme[name] = parse(value, true, variations);\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value));\n    }\n  }\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base;\n  }\n  return parsedTheme;\n}\n/**\n * Generate the CSS for a base color (.primary)\n */\n\nvar genBaseColor = function genBaseColor(name, value) {\n  return \"\\n.v-application .\".concat(name, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\n\nvar genVariantColor = function genVariantColor(name, variant, value) {\n  var _variant$split = variant.split(/(\\d)/, 2),\n    _variant$split2 = _slicedToArray(_variant$split, 2),\n    type = _variant$split2[0],\n    n = _variant$split2[1];\n  return \"\\n.v-application .\".concat(name, \".\").concat(type, \"-\").concat(n, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text.text--\").concat(type, \"-\").concat(n, \" {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\nvar genColorVariableName = function genColorVariableName(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"--v-\".concat(name, \"-\").concat(variant);\n};\nvar genColorVariable = function genColorVariable(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"var(\".concat(genColorVariableName(name, variant), \")\");\n};\nexport function genStyles(theme) {\n  var cssVar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var anchor = theme.anchor,\n    variant = _objectWithoutProperties(theme, _excluded2);\n  var colors = Object.keys(variant);\n  if (!colors.length) return '';\n  var variablesCss = '';\n  var css = '';\n  var aColor = cssVar ? genColorVariable('anchor') : anchor;\n  css += \".v-application a { color: \".concat(aColor, \"; }\");\n  cssVar && (variablesCss += \"  \".concat(genColorVariableName('anchor'), \": \").concat(anchor, \";\\n\"));\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base);\n    cssVar && (variablesCss += \"  \".concat(genColorVariableName(name), \": \").concat(value.base, \";\\n\"));\n    var variants = keys(value);\n    for (var _i = 0; _i < variants.length; ++_i) {\n      var _variant = variants[_i];\n      var variantValue = value[_variant];\n      if (_variant === 'base') continue;\n      css += genVariantColor(name, _variant, cssVar ? genColorVariable(name, _variant) : variantValue);\n      cssVar && (variablesCss += \"  \".concat(genColorVariableName(name, _variant), \": \").concat(variantValue, \";\\n\"));\n    }\n  }\n  if (cssVar) {\n    variablesCss = \":root {\\n\".concat(variablesCss, \"}\\n\\n\");\n  }\n  return variablesCss + css;\n}\nexport function genVariations(name, value) {\n  var values = {\n    base: intToHex(value)\n  };\n  for (var i = 5; i > 0; --i) {\n    values[\"lighten\".concat(i)] = intToHex(lighten(value, i));\n  }\n  for (var _i2 = 1; _i2 <= 4; ++_i2) {\n    values[\"darken\".concat(_i2)] = intToHex(darken(value, _i2));\n  }\n  return values;\n}\nexport function lighten(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}\nexport function darken(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}","map":{"version":3,"names":["keys","colorToInt","intToHex","colorToHex","sRGB","LAB","parse","theme","isItem","arguments","length","undefined","variations","anchor","variant","_objectWithoutProperties","_excluded","colors","Object","parsedTheme","i","name","value","base","startsWith","_typeof","genVariations","primary","genBaseColor","concat","genVariantColor","_variant$split","split","_variant$split2","_slicedToArray","type","n","genColorVariableName","genColorVariable","genStyles","cssVar","_excluded2","variablesCss","css","aColor","variants","variantValue","values","lighten","darken","amount","lab","fromXYZ","toXYZ"],"sources":["../../../src/services/theme/utils.ts"],"sourcesContent":["import { keys } from '../../util/helpers'\nimport { colorToInt, intToHex, colorToHex, ColorInt } from '../../util/colorUtils'\nimport * as sRGB from '../../util/color/transformSRGB'\nimport * as LAB from '../../util/color/transformCIELAB'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemeItem,\n} from 'vuetify/types/services/theme'\n\nexport function parse (\n  theme: Record<string, VuetifyThemeItem>,\n  isItem = false,\n  variations = true,\n): VuetifyParsedTheme {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (value == null) continue\n\n    if (!variations) {\n      parsedTheme[name] = { base: intToHex(colorToInt(value)) }\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true, variations)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: VuetifyParsedTheme, cssVar = false): string {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('anchor') : anchor\n  css += `.v-application a { color: ${aColor}; }`\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`)\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: ColorInt): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value),\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}